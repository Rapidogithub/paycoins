{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\pay\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './pages/Dashboard';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport TransactionHistory from './pages/TransactionHistory';\nimport PrivateRoute from './components/routing/PrivateRoute';\nimport setAuthToken from './utils/setAuthToken';\nimport { getStoredUser, getStoredToken, storeUser } from './utils/localStorage';\nimport './App.css';\n\n// Check for token in localStorage and set axios header\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nif (getStoredToken()) {\n  setAuthToken(getStoredToken());\n}\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  // Load user data on app load\n  useEffect(() => {\n    const loadUser = async () => {\n      const token = getStoredToken();\n      if (token) {\n        try {\n          // Try to get user from API\n          const res = await fetch('/api/auth', {\n            headers: {\n              'x-auth-token': token\n            }\n          });\n          if (res.ok) {\n            const data = await res.json();\n            setUser(data);\n            storeUser(data); // Store user in localStorage\n            setIsAuthenticated(true);\n          } else {\n            // If API fails, try to get from localStorage\n            const storedUser = getStoredUser();\n            if (storedUser) {\n              setUser(storedUser);\n              setIsAuthenticated(true);\n            }\n          }\n        } catch (err) {\n          console.error('Error loading user:', err);\n\n          // Try to get from localStorage as fallback\n          const storedUser = getStoredUser();\n          if (storedUser) {\n            setUser(storedUser);\n            setIsAuthenticated(true);\n          }\n        }\n      }\n      setLoading(false);\n    };\n    loadUser();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        isAuthenticated: isAuthenticated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(PrivateRoute, {\n              isAuthenticated: isAuthenticated,\n              loading: loading,\n              children: /*#__PURE__*/_jsxDEV(Dashboard, {\n                user: user\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/history\",\n            element: /*#__PURE__*/_jsxDEV(PrivateRoute, {\n              isAuthenticated: isAuthenticated,\n              loading: loading,\n              children: /*#__PURE__*/_jsxDEV(TransactionHistory, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: /*#__PURE__*/_jsxDEV(Login, {\n              setUser: setUser,\n              setIsAuthenticated: setIsAuthenticated\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/register\",\n            element: /*#__PURE__*/_jsxDEV(Register, {\n              setUser: setUser,\n              setIsAuthenticated: setIsAuthenticated\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MIOyihIJe1jbesOAPrjh1+/HIzc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navbar","Dashboard","Login","Register","TransactionHistory","PrivateRoute","setAuthToken","getStoredUser","getStoredToken","storeUser","jsxDEV","_jsxDEV","App","_s","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","loadUser","token","res","fetch","headers","ok","data","json","storedUser","err","console","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/pay/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Dashboard from './pages/Dashboard';\r\nimport Login from './pages/Login';\r\nimport Register from './pages/Register';\r\nimport TransactionHistory from './pages/TransactionHistory';\r\nimport PrivateRoute from './components/routing/PrivateRoute';\r\nimport setAuthToken from './utils/setAuthToken';\r\nimport { getStoredUser, getStoredToken, storeUser } from './utils/localStorage';\r\nimport './App.css';\r\n\r\n// Check for token in localStorage and set axios header\r\nif (getStoredToken()) {\r\n  setAuthToken(getStoredToken());\r\n}\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Load user data on app load\r\n  useEffect(() => {\r\n    const loadUser = async () => {\r\n      const token = getStoredToken();\r\n      if (token) {\r\n        try {\r\n          // Try to get user from API\r\n          const res = await fetch('/api/auth', {\r\n            headers: {\r\n              'x-auth-token': token\r\n            }\r\n          });\r\n          \r\n          if (res.ok) {\r\n            const data = await res.json();\r\n            setUser(data);\r\n            storeUser(data); // Store user in localStorage\r\n            setIsAuthenticated(true);\r\n          } else {\r\n            // If API fails, try to get from localStorage\r\n            const storedUser = getStoredUser();\r\n            if (storedUser) {\r\n              setUser(storedUser);\r\n              setIsAuthenticated(true);\r\n            }\r\n          }\r\n        } catch (err) {\r\n          console.error('Error loading user:', err);\r\n          \r\n          // Try to get from localStorage as fallback\r\n          const storedUser = getStoredUser();\r\n          if (storedUser) {\r\n            setUser(storedUser);\r\n            setIsAuthenticated(true);\r\n          }\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    loadUser();\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Navbar isAuthenticated={isAuthenticated} />\r\n        <div className=\"container\">\r\n          <Routes>\r\n            <Route \r\n              path=\"/\" \r\n              element={\r\n                <PrivateRoute isAuthenticated={isAuthenticated} loading={loading}>\r\n                  <Dashboard user={user} />\r\n                </PrivateRoute>\r\n              } \r\n            />\r\n            <Route \r\n              path=\"/history\" \r\n              element={\r\n                <PrivateRoute isAuthenticated={isAuthenticated} loading={loading}>\r\n                  <TransactionHistory />\r\n                </PrivateRoute>\r\n              } \r\n            />\r\n            <Route \r\n              path=\"/login\" \r\n              element={<Login setUser={setUser} setIsAuthenticated={setIsAuthenticated} />} \r\n            />\r\n            <Route \r\n              path=\"/register\" \r\n              element={<Register setUser={setUser} setIsAuthenticated={setIsAuthenticated} />} \r\n            />\r\n          </Routes>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}