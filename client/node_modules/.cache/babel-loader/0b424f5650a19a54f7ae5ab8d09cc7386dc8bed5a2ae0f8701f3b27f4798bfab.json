{"ast":null,"code":"import React,{useState,useEffect}from'react';import{BrowserRouter as Router,Routes,Route}from'react-router-dom';import Navbar from'./components/layout/Navbar';import BottomNav from'./components/layout/BottomNav';import Dashboard from'./pages/Dashboard';import Login from'./pages/Login';import Register from'./pages/Register';import TransactionHistory from'./pages/TransactionHistory';import Profile from'./pages/Profile';import SendPage from'./pages/SendPage';import ReceivePage from'./pages/ReceivePage';import ScanPage from'./pages/ScanPage';import PrivateRoute from'./components/routing/PrivateRoute';import ThemeCustomizer from'./components/layout/ThemeCustomizer';import setAuthToken from'./utils/setAuthToken';import{getStoredUser,getStoredToken,storeUser}from'./utils/localStorage';import'./App.css';// Check for token in localStorage and set axios header\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";if(getStoredToken()){setAuthToken(getStoredToken());}function App(){const[user,setUser]=useState(null);const[isAuthenticated,setIsAuthenticated]=useState(false);const[loading,setLoading]=useState(true);const[darkMode,setDarkMode]=useState(false);const[showThemeCustomizer,setShowThemeCustomizer]=useState(false);const[themeColor,setThemeColor]=useState('green');// default, green, blue, purple, orange\n// Load theme preferences from localStorage\nuseEffect(()=>{// Check for dark mode preference\nconst savedDarkMode=localStorage.getItem('darkMode');if(savedDarkMode!==null){setDarkMode(savedDarkMode==='true');}else if(window.matchMedia&&window.matchMedia('(prefers-color-scheme: dark)').matches){// Use system preference if no saved preference\nsetDarkMode(true);}// Check for theme color preference\nconst savedThemeColor=localStorage.getItem('themeColor');if(savedThemeColor){setThemeColor(savedThemeColor);}},[]);// Apply theme changes to document\nuseEffect(()=>{// Apply dark mode class to body\nif(darkMode){document.body.classList.add('dark-mode');}else{document.body.classList.remove('dark-mode');}// Apply theme color\ndocument.documentElement.setAttribute('data-theme',themeColor);// Save preferences to localStorage\nlocalStorage.setItem('darkMode',darkMode);localStorage.setItem('themeColor',themeColor);},[darkMode,themeColor]);// Toggle dark mode\nconst toggleDarkMode=()=>{setDarkMode(!darkMode);};// Change theme color\nconst changeThemeColor=color=>{setThemeColor(color);};// Toggle theme customizer\nconst toggleThemeCustomizer=()=>{setShowThemeCustomizer(!showThemeCustomizer);};// Load user data on app load\nuseEffect(()=>{const loadUser=async()=>{const token=getStoredToken();if(token){try{// Try to get user from API\nconst res=await fetch('/api/auth',{headers:{'x-auth-token':token}});if(res.ok){const data=await res.json();setUser(data);storeUser(data);// Store user in localStorage\nsetIsAuthenticated(true);}else{// If API fails, try to get from localStorage\nconst storedUser=getStoredUser();if(storedUser){setUser(storedUser);setIsAuthenticated(true);}}}catch(err){console.error('Error loading user:',err);// Try to get from localStorage as fallback\nconst storedUser=getStoredUser();if(storedUser){setUser(storedUser);setIsAuthenticated(true);}}}setLoading(false);};loadUser();},[]);return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(\"div\",{className:`App ${darkMode?'dark-mode':''}`,children:[/*#__PURE__*/_jsx(Navbar,{isAuthenticated:isAuthenticated}),/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(PrivateRoute,{isAuthenticated:isAuthenticated,loading:loading,children:/*#__PURE__*/_jsx(Dashboard,{user:user})})}),/*#__PURE__*/_jsx(Route,{path:\"/history\",element:/*#__PURE__*/_jsx(PrivateRoute,{isAuthenticated:isAuthenticated,loading:loading,children:/*#__PURE__*/_jsx(TransactionHistory,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/profile\",element:/*#__PURE__*/_jsx(PrivateRoute,{isAuthenticated:isAuthenticated,loading:loading,children:/*#__PURE__*/_jsx(Profile,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/send\",element:/*#__PURE__*/_jsx(PrivateRoute,{isAuthenticated:isAuthenticated,loading:loading,children:/*#__PURE__*/_jsx(SendPage,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/receive\",element:/*#__PURE__*/_jsx(PrivateRoute,{isAuthenticated:isAuthenticated,loading:loading,children:/*#__PURE__*/_jsx(ReceivePage,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/scan\",element:/*#__PURE__*/_jsx(PrivateRoute,{isAuthenticated:isAuthenticated,loading:loading,children:/*#__PURE__*/_jsx(ScanPage,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(Login,{setUser:setUser,setIsAuthenticated:setIsAuthenticated})}),/*#__PURE__*/_jsx(Route,{path:\"/register\",element:/*#__PURE__*/_jsx(Register,{setUser:setUser,setIsAuthenticated:setIsAuthenticated})})]})}),/*#__PURE__*/_jsx(BottomNav,{isAuthenticated:isAuthenticated}),/*#__PURE__*/_jsxs(\"div\",{className:\"theme-controls\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"dark-mode-toggle\",onClick:toggleDarkMode,children:/*#__PURE__*/_jsx(\"i\",{className:`fas ${darkMode?'fa-sun':'fa-moon'}`})}),/*#__PURE__*/_jsx(\"button\",{className:\"theme-customizer-toggle\",onClick:toggleThemeCustomizer,children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-palette\"})})]}),showThemeCustomizer&&/*#__PURE__*/_jsx(ThemeCustomizer,{themeColor:themeColor,changeThemeColor:changeThemeColor,darkMode:darkMode,toggleDarkMode:toggleDarkMode,onClose:()=>setShowThemeCustomizer(false)})]})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navbar","BottomNav","Dashboard","Login","Register","TransactionHistory","Profile","SendPage","ReceivePage","ScanPage","PrivateRoute","ThemeCustomizer","setAuthToken","getStoredUser","getStoredToken","storeUser","jsx","_jsx","jsxs","_jsxs","App","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","darkMode","setDarkMode","showThemeCustomizer","setShowThemeCustomizer","themeColor","setThemeColor","savedDarkMode","localStorage","getItem","window","matchMedia","matches","savedThemeColor","document","body","classList","add","remove","documentElement","setAttribute","setItem","toggleDarkMode","changeThemeColor","color","toggleThemeCustomizer","loadUser","token","res","fetch","headers","ok","data","json","storedUser","err","console","error","children","className","path","element","onClick","onClose"],"sources":["C:/Users/user/Documents/pay/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport Navbar from './components/layout/Navbar';\r\nimport BottomNav from './components/layout/BottomNav';\r\nimport Dashboard from './pages/Dashboard';\r\nimport Login from './pages/Login';\r\nimport Register from './pages/Register';\r\nimport TransactionHistory from './pages/TransactionHistory';\r\nimport Profile from './pages/Profile';\r\nimport SendPage from './pages/SendPage';\r\nimport ReceivePage from './pages/ReceivePage';\r\nimport ScanPage from './pages/ScanPage';\r\nimport PrivateRoute from './components/routing/PrivateRoute';\r\nimport ThemeCustomizer from './components/layout/ThemeCustomizer';\r\nimport setAuthToken from './utils/setAuthToken';\r\nimport { getStoredUser, getStoredToken, storeUser } from './utils/localStorage';\r\nimport './App.css';\r\n\r\n// Check for token in localStorage and set axios header\r\nif (getStoredToken()) {\r\n  setAuthToken(getStoredToken());\r\n}\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const [showThemeCustomizer, setShowThemeCustomizer] = useState(false);\r\n  const [themeColor, setThemeColor] = useState('green'); // default, green, blue, purple, orange\r\n\r\n  // Load theme preferences from localStorage\r\n  useEffect(() => {\r\n    // Check for dark mode preference\r\n    const savedDarkMode = localStorage.getItem('darkMode');\r\n    if (savedDarkMode !== null) {\r\n      setDarkMode(savedDarkMode === 'true');\r\n    } else if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\r\n      // Use system preference if no saved preference\r\n      setDarkMode(true);\r\n    }\r\n\r\n    // Check for theme color preference\r\n    const savedThemeColor = localStorage.getItem('themeColor');\r\n    if (savedThemeColor) {\r\n      setThemeColor(savedThemeColor);\r\n    }\r\n  }, []);\r\n\r\n  // Apply theme changes to document\r\n  useEffect(() => {\r\n    // Apply dark mode class to body\r\n    if (darkMode) {\r\n      document.body.classList.add('dark-mode');\r\n    } else {\r\n      document.body.classList.remove('dark-mode');\r\n    }\r\n\r\n    // Apply theme color\r\n    document.documentElement.setAttribute('data-theme', themeColor);\r\n\r\n    // Save preferences to localStorage\r\n    localStorage.setItem('darkMode', darkMode);\r\n    localStorage.setItem('themeColor', themeColor);\r\n  }, [darkMode, themeColor]);\r\n\r\n  // Toggle dark mode\r\n  const toggleDarkMode = () => {\r\n    setDarkMode(!darkMode);\r\n  };\r\n\r\n  // Change theme color\r\n  const changeThemeColor = (color) => {\r\n    setThemeColor(color);\r\n  };\r\n\r\n  // Toggle theme customizer\r\n  const toggleThemeCustomizer = () => {\r\n    setShowThemeCustomizer(!showThemeCustomizer);\r\n  };\r\n\r\n  // Load user data on app load\r\n  useEffect(() => {\r\n    const loadUser = async () => {\r\n      const token = getStoredToken();\r\n      if (token) {\r\n        try {\r\n          // Try to get user from API\r\n          const res = await fetch('/api/auth', {\r\n            headers: {\r\n              'x-auth-token': token\r\n            }\r\n          });\r\n          \r\n          if (res.ok) {\r\n            const data = await res.json();\r\n            setUser(data);\r\n            storeUser(data); // Store user in localStorage\r\n            setIsAuthenticated(true);\r\n          } else {\r\n            // If API fails, try to get from localStorage\r\n            const storedUser = getStoredUser();\r\n            if (storedUser) {\r\n              setUser(storedUser);\r\n              setIsAuthenticated(true);\r\n            }\r\n          }\r\n        } catch (err) {\r\n          console.error('Error loading user:', err);\r\n          \r\n          // Try to get from localStorage as fallback\r\n          const storedUser = getStoredUser();\r\n          if (storedUser) {\r\n            setUser(storedUser);\r\n            setIsAuthenticated(true);\r\n          }\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    loadUser();\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <div className={`App ${darkMode ? 'dark-mode' : ''}`}>\r\n        <Navbar isAuthenticated={isAuthenticated} />\r\n        <div className=\"container\">\r\n          <Routes>\r\n            <Route \r\n              path=\"/\" \r\n              element={\r\n                <PrivateRoute isAuthenticated={isAuthenticated} loading={loading}>\r\n                  <Dashboard user={user} />\r\n                </PrivateRoute>\r\n              } \r\n            />\r\n            <Route \r\n              path=\"/history\" \r\n              element={\r\n                <PrivateRoute isAuthenticated={isAuthenticated} loading={loading}>\r\n                  <TransactionHistory />\r\n                </PrivateRoute>\r\n              } \r\n            />\r\n            <Route \r\n              path=\"/profile\" \r\n              element={\r\n                <PrivateRoute isAuthenticated={isAuthenticated} loading={loading}>\r\n                  <Profile />\r\n                </PrivateRoute>\r\n              } \r\n            />\r\n            <Route \r\n              path=\"/send\" \r\n              element={\r\n                <PrivateRoute isAuthenticated={isAuthenticated} loading={loading}>\r\n                  <SendPage />\r\n                </PrivateRoute>\r\n              } \r\n            />\r\n            <Route \r\n              path=\"/receive\" \r\n              element={\r\n                <PrivateRoute isAuthenticated={isAuthenticated} loading={loading}>\r\n                  <ReceivePage />\r\n                </PrivateRoute>\r\n              } \r\n            />\r\n            <Route \r\n              path=\"/scan\" \r\n              element={\r\n                <PrivateRoute isAuthenticated={isAuthenticated} loading={loading}>\r\n                  <ScanPage />\r\n                </PrivateRoute>\r\n              } \r\n            />\r\n            <Route \r\n              path=\"/login\" \r\n              element={<Login setUser={setUser} setIsAuthenticated={setIsAuthenticated} />} \r\n            />\r\n            <Route \r\n              path=\"/register\" \r\n              element={<Register setUser={setUser} setIsAuthenticated={setIsAuthenticated} />} \r\n            />\r\n          </Routes>\r\n        </div>\r\n        \r\n        {/* Bottom Navigation */}\r\n        <BottomNav isAuthenticated={isAuthenticated} />\r\n        \r\n        {/* Theme Buttons */}\r\n        <div className=\"theme-controls\">\r\n          {/* Dark Mode Toggle */}\r\n          <button className=\"dark-mode-toggle\" onClick={toggleDarkMode}>\r\n            <i className={`fas ${darkMode ? 'fa-sun' : 'fa-moon'}`}></i>\r\n          </button>\r\n          \r\n          {/* Theme Customizer Toggle */}\r\n          <button className=\"theme-customizer-toggle\" onClick={toggleThemeCustomizer}>\r\n            <i className=\"fas fa-palette\"></i>\r\n          </button>\r\n        </div>\r\n        \r\n        {/* Theme Customizer Panel */}\r\n        {showThemeCustomizer && (\r\n          <ThemeCustomizer \r\n            themeColor={themeColor} \r\n            changeThemeColor={changeThemeColor}\r\n            darkMode={darkMode}\r\n            toggleDarkMode={toggleDarkMode}\r\n            onClose={() => setShowThemeCustomizer(false)}\r\n          />\r\n        )}\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}