{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Html5QrcodeScanner}from'html5-qrcode';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const QRScanner=_ref=>{let{onClose,onScanSuccess,onError}=_ref;const[scanResult,setScanResult]=useState(null);const[hasFlash,setHasFlash]=useState(false);const[isFlashOn,setIsFlashOn]=useState(false);const[cameras,setCameras]=useState([]);const[selectedCamera,setSelectedCamera]=useState(null);const[scanner,setScanner]=useState(null);const[error,setError]=useState(null);useEffect(()=>{// Check for flash/torch capability\nif(navigator.mediaDevices&&navigator.mediaDevices.getSupportedConstraints){const constraints=navigator.mediaDevices.getSupportedConstraints();setHasFlash(constraints.torch||false);}// Get available cameras\nHtml5QrcodeScanner.getCameras().then(devices=>{setCameras(devices);if(devices.length>0){setSelectedCamera(devices[0].id);}}).catch(err=>{console.error('Error getting cameras:',err);setError('Could not access camera. Please ensure camera permissions are granted.');});// Calculate optimal QR box size - responsive\nconst screenWidth=window.innerWidth;const qrBoxSize=Math.min(screenWidth*0.7,250);// Create scanner instance with improved mobile config\nconst newScanner=new Html5QrcodeScanner('reader',{qrbox:{width:qrBoxSize,height:qrBoxSize},fps:10,rememberLastUsedCamera:true,aspectRatio:1.0,disableFlip:false,// Allow user to flip image if needed\nshowTorchButtonIfSupported:false,// We'll use our own button\nsupportedScanTypes:[Html5QrcodeScanner.SCAN_TYPE_CAMERA,Html5QrcodeScanner.SCAN_TYPE_FILE],formatsToSupport:[Html5QrcodeScanner.FORMAT_QR_CODE,Html5QrcodeScanner.FORMAT_DATA_MATRIX]});setScanner(newScanner);// Success callback with vibration\nconst onScannerSuccess=(decodedText,decodedResult)=>{// Vibrate if supported\nif(navigator.vibrate){navigator.vibrate(200);}// Play success sound\ntry{const audio=new Audio('/scan-success.mp3');audio.play().catch(e=>console.log('Audio play failed:',e));}catch(e){console.log('Audio not supported');}// Stop scanner\nnewScanner.clear();setScanResult(decodedText);// Call parent's success callback\nif(onScanSuccess){try{let parsedData=decodedText;// Try to parse as JSON if it looks like JSON\nif(decodedText.startsWith('{')&&decodedText.endsWith('}')){try{parsedData=JSON.parse(decodedText);// Use wallet address if available\nif(parsedData.walletAddress){parsedData=parsedData.walletAddress;}}catch(e){console.log('Not valid JSON, using as is');}}onScanSuccess(parsedData);}catch(err){console.error('Error handling scan data:',err);setError('Invalid QR code format. Please try again.');}}};// Error callback\nconst onScannerError=err=>{console.warn(err);const errorMessage=err.includes('permissions')?'Camera access denied. Please check permissions.':'Error scanning QR code. Please try again.';setError(errorMessage);// Pass error to parent component if provided\nif(onError){onError(errorMessage);}};// Render scanner with a small delay to ensure DOM is ready\nsetTimeout(()=>{try{newScanner.render(onScannerSuccess,onScannerError);}catch(err){console.error('Error rendering scanner:',err);const errorMessage='Failed to initialize camera. Please try again.';setError(errorMessage);// Pass error to parent component if provided\nif(onError){onError(errorMessage);}}},100);// Handle window resize for responsive qrbox\nconst handleResize=()=>{if(newScanner){newScanner.clear();setTimeout(()=>{newScanner.render(onScannerSuccess,onScannerError);},100);}};window.addEventListener('resize',handleResize);// Cleanup function\nreturn()=>{window.removeEventListener('resize',handleResize);if(newScanner){try{newScanner.clear();}catch(e){console.log('Error clearing scanner:',e);}}};},[onScanSuccess,onError]);// Toggle flash/torch\nconst toggleFlash=async()=>{try{if(scanner&&scanner.getHtml5QrcodeScanner()){const html5QrCode=scanner.getHtml5QrcodeScanner().getHtml5QrCode();if(html5QrCode){await html5QrCode.applyVideoConstraints({advanced:[{torch:!isFlashOn}]});setIsFlashOn(!isFlashOn);}}}catch(err){console.error('Error toggling flash:',err);// Don't show error to user, just silently fail\n}};// Switch camera\nconst switchCamera=async cameraId=>{try{if(scanner&&scanner.getHtml5QrcodeScanner()){const html5QrCode=scanner.getHtml5QrcodeScanner().getHtml5QrCode();if(html5QrCode){await html5QrCode.stop();await html5QrCode.start({deviceId:{exact:cameraId}},{fps:10,qrbox:250},decodedText=>{scanner.getHtml5QrcodeScanner().onScanSuccess(decodedText);},errorMessage=>{scanner.getHtml5QrcodeScanner().onScanError(errorMessage);});setSelectedCamera(cameraId);}}}catch(err){console.error('Error switching camera:',err);setError('Unable to switch camera. Please try again.');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"qr-scanner my-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"scanner-header\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-camera\"}),\" Scan QR Code\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"scanner-controls\",children:[hasFlash&&/*#__PURE__*/_jsx(\"button\",{className:`btn btn-icon ${isFlashOn?'btn-warning':'btn-light'}`,onClick:toggleFlash,title:\"Toggle Flash\",children:/*#__PURE__*/_jsx(\"i\",{className:`fas fa-bolt`})}),cameras.length>1&&/*#__PURE__*/_jsx(\"select\",{className:\"camera-select form-control\",value:selectedCamera||'',onChange:e=>switchCamera(e.target.value),children:cameras.map(camera=>/*#__PURE__*/_jsx(\"option\",{value:camera.id,children:camera.label||`Camera ${camera.id.slice(0,4)}`},camera.id))})]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"scanner-instructions\",children:\"Point your camera at a wallet QR code to scan it\"}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"alert alert-danger\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-exclamation-circle\"}),\" \",error,/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-sm btn-light mt-2\",onClick:()=>setError(null),children:\"Dismiss\"})]}),scanResult?/*#__PURE__*/_jsxs(\"div\",{className:\"scan-result\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"alert alert-success\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-check-circle\"}),/*#__PURE__*/_jsx(\"strong\",{children:\"Scan successful!\"}),\" Address detected.\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:onClose,children:\"Continue\"})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"scan-container\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"reader\",className:\"reader-container\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-light mt-3\",onClick:onClose,children:\"Cancel\"})]})]});};export default QRScanner;","map":{"version":3,"names":["React","useState","useEffect","Html5QrcodeScanner","jsx","_jsx","jsxs","_jsxs","QRScanner","_ref","onClose","onScanSuccess","onError","scanResult","setScanResult","hasFlash","setHasFlash","isFlashOn","setIsFlashOn","cameras","setCameras","selectedCamera","setSelectedCamera","scanner","setScanner","error","setError","navigator","mediaDevices","getSupportedConstraints","constraints","torch","getCameras","then","devices","length","id","catch","err","console","screenWidth","window","innerWidth","qrBoxSize","Math","min","newScanner","qrbox","width","height","fps","rememberLastUsedCamera","aspectRatio","disableFlip","showTorchButtonIfSupported","supportedScanTypes","SCAN_TYPE_CAMERA","SCAN_TYPE_FILE","formatsToSupport","FORMAT_QR_CODE","FORMAT_DATA_MATRIX","onScannerSuccess","decodedText","decodedResult","vibrate","audio","Audio","play","e","log","clear","parsedData","startsWith","endsWith","JSON","parse","walletAddress","onScannerError","warn","errorMessage","includes","setTimeout","render","handleResize","addEventListener","removeEventListener","toggleFlash","getHtml5QrcodeScanner","html5QrCode","getHtml5QrCode","applyVideoConstraints","advanced","switchCamera","cameraId","stop","start","deviceId","exact","onScanError","className","children","onClick","title","value","onChange","target","map","camera","label","slice"],"sources":["C:/Users/user/Documents/pay/client/src/components/wallet/QRScanner.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Html5QrcodeScanner } from 'html5-qrcode';\r\n\r\nconst QRScanner = ({ onClose, onScanSuccess, onError }) => {\r\n  const [scanResult, setScanResult] = useState(null);\r\n  const [hasFlash, setHasFlash] = useState(false);\r\n  const [isFlashOn, setIsFlashOn] = useState(false);\r\n  const [cameras, setCameras] = useState([]);\r\n  const [selectedCamera, setSelectedCamera] = useState(null);\r\n  const [scanner, setScanner] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Check for flash/torch capability\r\n    if (navigator.mediaDevices && navigator.mediaDevices.getSupportedConstraints) {\r\n      const constraints = navigator.mediaDevices.getSupportedConstraints();\r\n      setHasFlash(constraints.torch || false);\r\n    }\r\n\r\n    // Get available cameras\r\n    Html5QrcodeScanner.getCameras()\r\n      .then(devices => {\r\n        setCameras(devices);\r\n        if (devices.length > 0) {\r\n          setSelectedCamera(devices[0].id);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.error('Error getting cameras:', err);\r\n        setError('Could not access camera. Please ensure camera permissions are granted.');\r\n      });\r\n\r\n    // Calculate optimal QR box size - responsive\r\n    const screenWidth = window.innerWidth;\r\n    const qrBoxSize = Math.min(screenWidth * 0.7, 250);\r\n\r\n    // Create scanner instance with improved mobile config\r\n    const newScanner = new Html5QrcodeScanner('reader', {\r\n      qrbox: {\r\n        width: qrBoxSize,\r\n        height: qrBoxSize\r\n      },\r\n      fps: 10,\r\n      rememberLastUsedCamera: true,\r\n      aspectRatio: 1.0,\r\n      disableFlip: false, // Allow user to flip image if needed\r\n      showTorchButtonIfSupported: false, // We'll use our own button\r\n      supportedScanTypes: [\r\n        Html5QrcodeScanner.SCAN_TYPE_CAMERA, \r\n        Html5QrcodeScanner.SCAN_TYPE_FILE\r\n      ],\r\n      formatsToSupport: [\r\n        Html5QrcodeScanner.FORMAT_QR_CODE,\r\n        Html5QrcodeScanner.FORMAT_DATA_MATRIX\r\n      ]\r\n    });\r\n\r\n    setScanner(newScanner);\r\n\r\n    // Success callback with vibration\r\n    const onScannerSuccess = (decodedText, decodedResult) => {\r\n      // Vibrate if supported\r\n      if (navigator.vibrate) {\r\n        navigator.vibrate(200);\r\n      }\r\n\r\n      // Play success sound\r\n      try {\r\n        const audio = new Audio('/scan-success.mp3');\r\n        audio.play().catch(e => console.log('Audio play failed:', e));\r\n      } catch (e) {\r\n        console.log('Audio not supported');\r\n      }\r\n\r\n      // Stop scanner\r\n      newScanner.clear();\r\n      setScanResult(decodedText);\r\n      \r\n      // Call parent's success callback\r\n      if (onScanSuccess) {\r\n        try {\r\n          let parsedData = decodedText;\r\n          // Try to parse as JSON if it looks like JSON\r\n          if (decodedText.startsWith('{') && decodedText.endsWith('}')) {\r\n            try {\r\n              parsedData = JSON.parse(decodedText);\r\n              // Use wallet address if available\r\n              if (parsedData.walletAddress) {\r\n                parsedData = parsedData.walletAddress;\r\n              }\r\n            } catch (e) {\r\n              console.log('Not valid JSON, using as is');\r\n            }\r\n          }\r\n          onScanSuccess(parsedData);\r\n        } catch (err) {\r\n          console.error('Error handling scan data:', err);\r\n          setError('Invalid QR code format. Please try again.');\r\n        }\r\n      }\r\n    };\r\n\r\n    // Error callback\r\n    const onScannerError = (err) => {\r\n      console.warn(err);\r\n      const errorMessage = err.includes('permissions') \r\n        ? 'Camera access denied. Please check permissions.' \r\n        : 'Error scanning QR code. Please try again.';\r\n      \r\n      setError(errorMessage);\r\n      \r\n      // Pass error to parent component if provided\r\n      if (onError) {\r\n        onError(errorMessage);\r\n      }\r\n    };\r\n\r\n    // Render scanner with a small delay to ensure DOM is ready\r\n    setTimeout(() => {\r\n      try {\r\n        newScanner.render(onScannerSuccess, onScannerError);\r\n      } catch (err) {\r\n        console.error('Error rendering scanner:', err);\r\n        const errorMessage = 'Failed to initialize camera. Please try again.';\r\n        setError(errorMessage);\r\n        \r\n        // Pass error to parent component if provided\r\n        if (onError) {\r\n          onError(errorMessage);\r\n        }\r\n      }\r\n    }, 100);\r\n\r\n    // Handle window resize for responsive qrbox\r\n    const handleResize = () => {\r\n      if (newScanner) {\r\n        newScanner.clear();\r\n        setTimeout(() => {\r\n          newScanner.render(onScannerSuccess, onScannerError);\r\n        }, 100);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    // Cleanup function\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      if (newScanner) {\r\n        try {\r\n          newScanner.clear();\r\n        } catch (e) {\r\n          console.log('Error clearing scanner:', e);\r\n        }\r\n      }\r\n    };\r\n  }, [onScanSuccess, onError]);\r\n\r\n  // Toggle flash/torch\r\n  const toggleFlash = async () => {\r\n    try {\r\n      if (scanner && scanner.getHtml5QrcodeScanner()) {\r\n        const html5QrCode = scanner.getHtml5QrcodeScanner().getHtml5QrCode();\r\n        if (html5QrCode) {\r\n          await html5QrCode.applyVideoConstraints({\r\n            advanced: [{ torch: !isFlashOn }]\r\n          });\r\n          setIsFlashOn(!isFlashOn);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error('Error toggling flash:', err);\r\n      // Don't show error to user, just silently fail\r\n    }\r\n  };\r\n\r\n  // Switch camera\r\n  const switchCamera = async (cameraId) => {\r\n    try {\r\n      if (scanner && scanner.getHtml5QrcodeScanner()) {\r\n        const html5QrCode = scanner.getHtml5QrcodeScanner().getHtml5QrCode();\r\n        if (html5QrCode) {\r\n          await html5QrCode.stop();\r\n          await html5QrCode.start(\r\n            { deviceId: { exact: cameraId } },\r\n            { fps: 10, qrbox: 250 },\r\n            (decodedText) => {\r\n              scanner.getHtml5QrcodeScanner().onScanSuccess(decodedText);\r\n            },\r\n            (errorMessage) => {\r\n              scanner.getHtml5QrcodeScanner().onScanError(errorMessage);\r\n            }\r\n          );\r\n          setSelectedCamera(cameraId);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error('Error switching camera:', err);\r\n      setError('Unable to switch camera. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"qr-scanner my-4\">\r\n      <div className=\"scanner-header\">\r\n        <h3>\r\n          <i className=\"fas fa-camera\"></i> Scan QR Code\r\n        </h3>\r\n        <div className=\"scanner-controls\">\r\n          {hasFlash && (\r\n            <button \r\n              className={`btn btn-icon ${isFlashOn ? 'btn-warning' : 'btn-light'}`}\r\n              onClick={toggleFlash}\r\n              title=\"Toggle Flash\"\r\n            >\r\n              <i className={`fas fa-bolt`}></i>\r\n            </button>\r\n          )}\r\n          {cameras.length > 1 && (\r\n            <select \r\n              className=\"camera-select form-control\"\r\n              value={selectedCamera || ''}\r\n              onChange={(e) => switchCamera(e.target.value)}\r\n            >\r\n              {cameras.map(camera => (\r\n                <option key={camera.id} value={camera.id}>\r\n                  {camera.label || `Camera ${camera.id.slice(0, 4)}`}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          )}\r\n        </div>\r\n      </div>\r\n      \r\n      <p className=\"scanner-instructions\">\r\n        Point your camera at a wallet QR code to scan it\r\n      </p>\r\n      \r\n      {error && (\r\n        <div className=\"alert alert-danger\">\r\n          <i className=\"fas fa-exclamation-circle\"></i> {error}\r\n          <button \r\n            className=\"btn btn-sm btn-light mt-2\"\r\n            onClick={() => setError(null)}\r\n          >\r\n            Dismiss\r\n          </button>\r\n        </div>\r\n      )}\r\n      \r\n      {scanResult ? (\r\n        <div className=\"scan-result\">\r\n          <div className=\"alert alert-success\">\r\n            <i className=\"fas fa-check-circle\"></i>\r\n            <strong>Scan successful!</strong> Address detected.\r\n          </div>\r\n          <button \r\n            className=\"btn btn-primary\"\r\n            onClick={onClose}\r\n          >\r\n            Continue\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"scan-container\">\r\n          <div id=\"reader\" className=\"reader-container\"></div>\r\n          <button \r\n            className=\"btn btn-light mt-3\"\r\n            onClick={onClose}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRScanner; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}