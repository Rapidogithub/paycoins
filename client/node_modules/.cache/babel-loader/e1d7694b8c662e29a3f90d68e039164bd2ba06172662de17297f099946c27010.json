{"ast":null,"code":"import React,{useState,useEffect}from'react';import{BrowserRouter as Router,Routes,Route}from'react-router-dom';import Navbar from'./components/layout/Navbar';import Dashboard from'./pages/Dashboard';import Login from'./pages/Login';import Register from'./pages/Register';import TransactionHistory from'./pages/TransactionHistory';import PrivateRoute from'./components/routing/PrivateRoute';import setAuthToken from'./utils/setAuthToken';import{getStoredUser,getStoredToken,storeUser}from'./utils/localStorage';import'./App.css';// Check for token in localStorage and set axios header\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";if(getStoredToken()){setAuthToken(getStoredToken());}function App(){const[user,setUser]=useState(null);const[isAuthenticated,setIsAuthenticated]=useState(false);const[loading,setLoading]=useState(true);const[darkMode,setDarkMode]=useState(false);// Load dark mode preference from localStorage\nuseEffect(()=>{const savedDarkMode=localStorage.getItem('darkMode')==='true';setDarkMode(savedDarkMode);if(savedDarkMode){document.body.classList.add('dark-mode');}},[]);// Toggle dark mode\nconst toggleDarkMode=()=>{const newDarkMode=!darkMode;setDarkMode(newDarkMode);localStorage.setItem('darkMode',newDarkMode.toString());if(newDarkMode){document.body.classList.add('dark-mode');}else{document.body.classList.remove('dark-mode');}};// Load user data on app load\nuseEffect(()=>{const loadUser=async()=>{const token=getStoredToken();if(token){try{// Try to get user from API\nconst res=await fetch('/api/auth',{headers:{'x-auth-token':token}});if(res.ok){const data=await res.json();setUser(data);storeUser(data);// Store user in localStorage\nsetIsAuthenticated(true);}else{// If API fails, try to get from localStorage\nconst storedUser=getStoredUser();if(storedUser){setUser(storedUser);setIsAuthenticated(true);}}}catch(err){console.error('Error loading user:',err);// Try to get from localStorage as fallback\nconst storedUser=getStoredUser();if(storedUser){setUser(storedUser);setIsAuthenticated(true);}}}setLoading(false);};loadUser();},[]);return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(\"div\",{className:`App ${darkMode?'dark-mode':''}`,children:[/*#__PURE__*/_jsx(Navbar,{isAuthenticated:isAuthenticated}),/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(PrivateRoute,{isAuthenticated:isAuthenticated,loading:loading,children:/*#__PURE__*/_jsx(Dashboard,{user:user})})}),/*#__PURE__*/_jsx(Route,{path:\"/history\",element:/*#__PURE__*/_jsx(PrivateRoute,{isAuthenticated:isAuthenticated,loading:loading,children:/*#__PURE__*/_jsx(TransactionHistory,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(Login,{setUser:setUser,setIsAuthenticated:setIsAuthenticated})}),/*#__PURE__*/_jsx(Route,{path:\"/register\",element:/*#__PURE__*/_jsx(Register,{setUser:setUser,setIsAuthenticated:setIsAuthenticated})})]})}),/*#__PURE__*/_jsx(\"button\",{className:\"dark-mode-toggle\",onClick:toggleDarkMode,children:/*#__PURE__*/_jsx(\"i\",{className:`fas ${darkMode?'fa-sun':'fa-moon'}`})})]})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navbar","Dashboard","Login","Register","TransactionHistory","PrivateRoute","setAuthToken","getStoredUser","getStoredToken","storeUser","jsx","_jsx","jsxs","_jsxs","App","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","darkMode","setDarkMode","savedDarkMode","localStorage","getItem","document","body","classList","add","toggleDarkMode","newDarkMode","setItem","toString","remove","loadUser","token","res","fetch","headers","ok","data","json","storedUser","err","console","error","children","className","path","element","onClick"],"sources":["C:/Users/user/Documents/pay/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Dashboard from './pages/Dashboard';\r\nimport Login from './pages/Login';\r\nimport Register from './pages/Register';\r\nimport TransactionHistory from './pages/TransactionHistory';\r\nimport PrivateRoute from './components/routing/PrivateRoute';\r\nimport setAuthToken from './utils/setAuthToken';\r\nimport { getStoredUser, getStoredToken, storeUser } from './utils/localStorage';\r\nimport './App.css';\r\n\r\n// Check for token in localStorage and set axios header\r\nif (getStoredToken()) {\r\n  setAuthToken(getStoredToken());\r\n}\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  // Load dark mode preference from localStorage\r\n  useEffect(() => {\r\n    const savedDarkMode = localStorage.getItem('darkMode') === 'true';\r\n    setDarkMode(savedDarkMode);\r\n    if (savedDarkMode) {\r\n      document.body.classList.add('dark-mode');\r\n    }\r\n  }, []);\r\n\r\n  // Toggle dark mode\r\n  const toggleDarkMode = () => {\r\n    const newDarkMode = !darkMode;\r\n    setDarkMode(newDarkMode);\r\n    localStorage.setItem('darkMode', newDarkMode.toString());\r\n    \r\n    if (newDarkMode) {\r\n      document.body.classList.add('dark-mode');\r\n    } else {\r\n      document.body.classList.remove('dark-mode');\r\n    }\r\n  };\r\n\r\n  // Load user data on app load\r\n  useEffect(() => {\r\n    const loadUser = async () => {\r\n      const token = getStoredToken();\r\n      if (token) {\r\n        try {\r\n          // Try to get user from API\r\n          const res = await fetch('/api/auth', {\r\n            headers: {\r\n              'x-auth-token': token\r\n            }\r\n          });\r\n          \r\n          if (res.ok) {\r\n            const data = await res.json();\r\n            setUser(data);\r\n            storeUser(data); // Store user in localStorage\r\n            setIsAuthenticated(true);\r\n          } else {\r\n            // If API fails, try to get from localStorage\r\n            const storedUser = getStoredUser();\r\n            if (storedUser) {\r\n              setUser(storedUser);\r\n              setIsAuthenticated(true);\r\n            }\r\n          }\r\n        } catch (err) {\r\n          console.error('Error loading user:', err);\r\n          \r\n          // Try to get from localStorage as fallback\r\n          const storedUser = getStoredUser();\r\n          if (storedUser) {\r\n            setUser(storedUser);\r\n            setIsAuthenticated(true);\r\n          }\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    loadUser();\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <div className={`App ${darkMode ? 'dark-mode' : ''}`}>\r\n        <Navbar isAuthenticated={isAuthenticated} />\r\n        <div className=\"container\">\r\n          <Routes>\r\n            <Route \r\n              path=\"/\" \r\n              element={\r\n                <PrivateRoute isAuthenticated={isAuthenticated} loading={loading}>\r\n                  <Dashboard user={user} />\r\n                </PrivateRoute>\r\n              } \r\n            />\r\n            <Route \r\n              path=\"/history\" \r\n              element={\r\n                <PrivateRoute isAuthenticated={isAuthenticated} loading={loading}>\r\n                  <TransactionHistory />\r\n                </PrivateRoute>\r\n              } \r\n            />\r\n            <Route \r\n              path=\"/login\" \r\n              element={<Login setUser={setUser} setIsAuthenticated={setIsAuthenticated} />} \r\n            />\r\n            <Route \r\n              path=\"/register\" \r\n              element={<Register setUser={setUser} setIsAuthenticated={setIsAuthenticated} />} \r\n            />\r\n          </Routes>\r\n        </div>\r\n        <button className=\"dark-mode-toggle\" onClick={toggleDarkMode}>\r\n          <i className={`fas ${darkMode ? 'fa-sun' : 'fa-moon'}`}></i>\r\n        </button>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}