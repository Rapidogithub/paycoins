{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';// Remove the moment import and implement formatting directly\n// import moment from 'moment';\nimport{getStoredWallet,getStoredTransactions,storeTransactions}from'../utils/localStorage';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TransactionHistory=()=>{const[transactions,setTransactions]=useState([]);const[wallet,setWallet]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState('');const[isOffline,setIsOffline]=useState(!navigator.onLine);// Check online status\nuseEffect(()=>{const handleOnline=()=>setIsOffline(false);const handleOffline=()=>setIsOffline(true);window.addEventListener('online',handleOnline);window.addEventListener('offline',handleOffline);return()=>{window.removeEventListener('online',handleOnline);window.removeEventListener('offline',handleOffline);};},[]);useEffect(()=>{const loadData=async()=>{try{// Load wallet data\nlet walletData;if(navigator.onLine){// Try to get wallet from API\nconst walletRes=await axios.get('/api/wallets');walletData=walletRes.data;}else{// Use localStorage in offline mode\nwalletData=getStoredWallet();if(!walletData){setError('No wallet data available offline');setLoading(false);return;}}setWallet(walletData);// Load transaction history\nlet transactionData;if(navigator.onLine){// Get from API if online\nconst transactionsRes=await axios.get('/api/transactions');transactionData=transactionsRes.data;// Sync with local pending transactions\nconst storedTransactions=getStoredTransactions();const pendingTransactions=storedTransactions.filter(t=>t.isPending);if(pendingTransactions.length>0){// TODO: In a real app, we would sync these with the server\n// For now, just display them\ntransactionData=[...pendingTransactions,...transactionData];// Update localStorage to mark these as no longer pending\nstoreTransactions(transactionData);}}else{// Use localStorage in offline mode\ntransactionData=getStoredTransactions();}setTransactions(transactionData);setLoading(false);}catch(err){console.error('Error loading transaction history:',err);// Fallback to localStorage\nconst storedWallet=getStoredWallet();const storedTransactions=getStoredTransactions();if(storedWallet){setWallet(storedWallet);}setTransactions(storedTransactions);if(!storedWallet&&!storedTransactions.length){setError('Failed to load transaction history');}setLoading(false);}};loadData();},[]);// Replace moment with a custom date formatter\nconst formatDate=date=>{const options={year:'numeric',month:'short',day:'2-digit',hour:'numeric',minute:'2-digit',hour12:true};return new Date(date).toLocaleString('en-US',options);};if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading transaction history...\"});}if(error){return/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-danger\",children:error});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-center my-4\",children:\"Transaction History\"}),isOffline&&/*#__PURE__*/_jsxs(\"div\",{className:\"alert alert-warning\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-wifi-slash\"}),\" You are currently offline. Displaying locally stored transactions.\"]}),transactions.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-info\",children:\"No transactions found. Start sending or receiving coins!\"}):/*#__PURE__*/_jsx(\"div\",{className:\"transaction-list\",children:transactions.map(transaction=>{const isSender=wallet&&transaction.senderWalletAddress===wallet.walletAddress;const otherPartyAddress=isSender?transaction.receiverWalletAddress:transaction.senderWalletAddress;return/*#__PURE__*/_jsxs(\"div\",{className:\"transaction-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"transaction-details\",children:[/*#__PURE__*/_jsxs(\"span\",{className:`transaction-amount ${isSender?'sent':'received'}`,children:[isSender?'-':'+',transaction.amount,\" PAY\"]}),/*#__PURE__*/_jsx(\"span\",{className:\"transaction-date\",children:formatDate(transaction.date)}),/*#__PURE__*/_jsxs(\"span\",{className:\"transaction-address\",children:[isSender?'To: ':'From: ',otherPartyAddress]})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"span\",{className:`badge ${transaction.isPending?'badge-warning':'badge-primary'}`,children:transaction.isPending?'Pending':isSender?'Sent':'Received'})})]},transaction.id||transaction._id);})})]});};export default TransactionHistory;","map":{"version":3,"names":["React","useState","useEffect","axios","getStoredWallet","getStoredTransactions","storeTransactions","jsx","_jsx","jsxs","_jsxs","TransactionHistory","transactions","setTransactions","wallet","setWallet","loading","setLoading","error","setError","isOffline","setIsOffline","navigator","onLine","handleOnline","handleOffline","window","addEventListener","removeEventListener","loadData","walletData","walletRes","get","data","transactionData","transactionsRes","storedTransactions","pendingTransactions","filter","t","isPending","length","err","console","storedWallet","formatDate","date","options","year","month","day","hour","minute","hour12","Date","toLocaleString","children","className","map","transaction","isSender","senderWalletAddress","walletAddress","otherPartyAddress","receiverWalletAddress","amount","id","_id"],"sources":["C:/Users/user/Documents/pay/client/src/pages/TransactionHistory.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n// Remove the moment import and implement formatting directly\r\n// import moment from 'moment';\r\nimport { getStoredWallet, getStoredTransactions, storeTransactions } from '../utils/localStorage';\r\n\r\nconst TransactionHistory = () => {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [wallet, setWallet] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [isOffline, setIsOffline] = useState(!navigator.onLine);\r\n\r\n  // Check online status\r\n  useEffect(() => {\r\n    const handleOnline = () => setIsOffline(false);\r\n    const handleOffline = () => setIsOffline(true);\r\n\r\n    window.addEventListener('online', handleOnline);\r\n    window.addEventListener('offline', handleOffline);\r\n\r\n    return () => {\r\n      window.removeEventListener('online', handleOnline);\r\n      window.removeEventListener('offline', handleOffline);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        // Load wallet data\r\n        let walletData;\r\n        if (navigator.onLine) {\r\n          // Try to get wallet from API\r\n          const walletRes = await axios.get('/api/wallets');\r\n          walletData = walletRes.data;\r\n        } else {\r\n          // Use localStorage in offline mode\r\n          walletData = getStoredWallet();\r\n          if (!walletData) {\r\n            setError('No wallet data available offline');\r\n            setLoading(false);\r\n            return;\r\n          }\r\n        }\r\n        setWallet(walletData);\r\n        \r\n        // Load transaction history\r\n        let transactionData;\r\n        if (navigator.onLine) {\r\n          // Get from API if online\r\n          const transactionsRes = await axios.get('/api/transactions');\r\n          transactionData = transactionsRes.data;\r\n          \r\n          // Sync with local pending transactions\r\n          const storedTransactions = getStoredTransactions();\r\n          const pendingTransactions = storedTransactions.filter(t => t.isPending);\r\n          \r\n          if (pendingTransactions.length > 0) {\r\n            // TODO: In a real app, we would sync these with the server\r\n            // For now, just display them\r\n            transactionData = [...pendingTransactions, ...transactionData];\r\n            \r\n            // Update localStorage to mark these as no longer pending\r\n            storeTransactions(transactionData);\r\n          }\r\n        } else {\r\n          // Use localStorage in offline mode\r\n          transactionData = getStoredTransactions();\r\n        }\r\n        \r\n        setTransactions(transactionData);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Error loading transaction history:', err);\r\n        \r\n        // Fallback to localStorage\r\n        const storedWallet = getStoredWallet();\r\n        const storedTransactions = getStoredTransactions();\r\n        \r\n        if (storedWallet) {\r\n          setWallet(storedWallet);\r\n        }\r\n        \r\n        setTransactions(storedTransactions);\r\n        \r\n        if (!storedWallet && !storedTransactions.length) {\r\n          setError('Failed to load transaction history');\r\n        }\r\n        \r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadData();\r\n  }, []);\r\n\r\n  // Replace moment with a custom date formatter\r\n  const formatDate = (date) => {\r\n    const options = { \r\n      year: 'numeric', \r\n      month: 'short', \r\n      day: '2-digit',\r\n      hour: 'numeric',\r\n      minute: '2-digit',\r\n      hour12: true\r\n    };\r\n    \r\n    return new Date(date).toLocaleString('en-US', options);\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading transaction history...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"alert alert-danger\">{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center my-4\">Transaction History</h1>\r\n      \r\n      {isOffline && (\r\n        <div className=\"alert alert-warning\">\r\n          <i className=\"fas fa-wifi-slash\"></i> You are currently offline. Displaying locally stored transactions.\r\n        </div>\r\n      )}\r\n      \r\n      {transactions.length === 0 ? (\r\n        <div className=\"alert alert-info\">\r\n          No transactions found. Start sending or receiving coins!\r\n        </div>\r\n      ) : (\r\n        <div className=\"transaction-list\">\r\n          {transactions.map((transaction) => {\r\n            const isSender = wallet && transaction.senderWalletAddress === wallet.walletAddress;\r\n            const otherPartyAddress = isSender\r\n              ? transaction.receiverWalletAddress\r\n              : transaction.senderWalletAddress;\r\n\r\n            return (\r\n              <div\r\n                key={transaction.id || transaction._id}\r\n                className=\"transaction-item\"\r\n              >\r\n                <div className=\"transaction-details\">\r\n                  <span\r\n                    className={`transaction-amount ${\r\n                      isSender ? 'sent' : 'received'\r\n                    }`}\r\n                  >\r\n                    {isSender ? '-' : '+'}{transaction.amount} PAY\r\n                  </span>\r\n                  <span className=\"transaction-date\">\r\n                    {formatDate(transaction.date)}\r\n                  </span>\r\n                  <span className=\"transaction-address\">\r\n                    {isSender ? 'To: ' : 'From: '}{otherPartyAddress}\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <span className={`badge ${transaction.isPending ? 'badge-warning' : 'badge-primary'}`}>\r\n                    {transaction.isPending ? 'Pending' : (isSender ? 'Sent' : 'Received')}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionHistory; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}