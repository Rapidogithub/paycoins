{"ast":null,"code":"// LocalStorage keys\nconst KEYS = {\n  USER: 'wallet_user',\n  TOKEN: 'wallet_token',\n  WALLET: 'wallet_data',\n  TRANSACTIONS: 'wallet_transactions'\n};\n\n// User storage functions\nexport const getStoredUser = () => {\n  try {\n    const storedUser = localStorage.getItem(KEYS.USER);\n    return storedUser ? JSON.parse(storedUser) : null;\n  } catch (error) {\n    console.error('Error getting user from localStorage:', error);\n    return null;\n  }\n};\nexport const storeUser = user => {\n  try {\n    localStorage.setItem(KEYS.USER, JSON.stringify(user));\n  } catch (error) {\n    console.error('Error storing user in localStorage:', error);\n  }\n};\n\n// Token storage functions\nexport const getStoredToken = () => {\n  return localStorage.getItem(KEYS.TOKEN);\n};\nexport const storeToken = token => {\n  localStorage.setItem(KEYS.TOKEN, token);\n};\nexport const removeToken = () => {\n  localStorage.removeItem(KEYS.TOKEN);\n};\n\n// Wallet storage functions\nexport const getStoredWallet = () => {\n  try {\n    const storedWallet = localStorage.getItem(KEYS.WALLET);\n    return storedWallet ? JSON.parse(storedWallet) : null;\n  } catch (error) {\n    console.error('Error getting wallet from localStorage:', error);\n    return null;\n  }\n};\nexport const storeWallet = wallet => {\n  try {\n    localStorage.setItem(KEYS.WALLET, JSON.stringify(wallet));\n  } catch (error) {\n    console.error('Error storing wallet in localStorage:', error);\n  }\n};\n\n// Transaction storage functions\nexport const getStoredTransactions = () => {\n  try {\n    const storedTransactions = localStorage.getItem(KEYS.TRANSACTIONS);\n    return storedTransactions ? JSON.parse(storedTransactions) : [];\n  } catch (error) {\n    console.error('Error getting transactions from localStorage:', error);\n    return [];\n  }\n};\nexport const storeTransactions = transactions => {\n  try {\n    localStorage.setItem(KEYS.TRANSACTIONS, JSON.stringify(transactions));\n  } catch (error) {\n    console.error('Error storing transactions in localStorage:', error);\n  }\n};\n\n// Clear all wallet app data\nexport const clearAllData = () => {\n  localStorage.removeItem(KEYS.USER);\n  localStorage.removeItem(KEYS.TOKEN);\n  localStorage.removeItem(KEYS.WALLET);\n  localStorage.removeItem(KEYS.TRANSACTIONS);\n};","map":{"version":3,"names":["KEYS","USER","TOKEN","WALLET","TRANSACTIONS","getStoredUser","storedUser","localStorage","getItem","JSON","parse","error","console","storeUser","user","setItem","stringify","getStoredToken","storeToken","token","removeToken","removeItem","getStoredWallet","storedWallet","storeWallet","wallet","getStoredTransactions","storedTransactions","storeTransactions","transactions","clearAllData"],"sources":["C:/Users/user/Documents/pay/client/src/utils/localStorage.js"],"sourcesContent":["// LocalStorage keys\r\nconst KEYS = {\r\n  USER: 'wallet_user',\r\n  TOKEN: 'wallet_token',\r\n  WALLET: 'wallet_data',\r\n  TRANSACTIONS: 'wallet_transactions'\r\n};\r\n\r\n// User storage functions\r\nexport const getStoredUser = () => {\r\n  try {\r\n    const storedUser = localStorage.getItem(KEYS.USER);\r\n    return storedUser ? JSON.parse(storedUser) : null;\r\n  } catch (error) {\r\n    console.error('Error getting user from localStorage:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const storeUser = (user) => {\r\n  try {\r\n    localStorage.setItem(KEYS.USER, JSON.stringify(user));\r\n  } catch (error) {\r\n    console.error('Error storing user in localStorage:', error);\r\n  }\r\n};\r\n\r\n// Token storage functions\r\nexport const getStoredToken = () => {\r\n  return localStorage.getItem(KEYS.TOKEN);\r\n};\r\n\r\nexport const storeToken = (token) => {\r\n  localStorage.setItem(KEYS.TOKEN, token);\r\n};\r\n\r\nexport const removeToken = () => {\r\n  localStorage.removeItem(KEYS.TOKEN);\r\n};\r\n\r\n// Wallet storage functions\r\nexport const getStoredWallet = () => {\r\n  try {\r\n    const storedWallet = localStorage.getItem(KEYS.WALLET);\r\n    return storedWallet ? JSON.parse(storedWallet) : null;\r\n  } catch (error) {\r\n    console.error('Error getting wallet from localStorage:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const storeWallet = (wallet) => {\r\n  try {\r\n    localStorage.setItem(KEYS.WALLET, JSON.stringify(wallet));\r\n  } catch (error) {\r\n    console.error('Error storing wallet in localStorage:', error);\r\n  }\r\n};\r\n\r\n// Transaction storage functions\r\nexport const getStoredTransactions = () => {\r\n  try {\r\n    const storedTransactions = localStorage.getItem(KEYS.TRANSACTIONS);\r\n    return storedTransactions ? JSON.parse(storedTransactions) : [];\r\n  } catch (error) {\r\n    console.error('Error getting transactions from localStorage:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const storeTransactions = (transactions) => {\r\n  try {\r\n    localStorage.setItem(KEYS.TRANSACTIONS, JSON.stringify(transactions));\r\n  } catch (error) {\r\n    console.error('Error storing transactions in localStorage:', error);\r\n  }\r\n};\r\n\r\n// Clear all wallet app data\r\nexport const clearAllData = () => {\r\n  localStorage.removeItem(KEYS.USER);\r\n  localStorage.removeItem(KEYS.TOKEN);\r\n  localStorage.removeItem(KEYS.WALLET);\r\n  localStorage.removeItem(KEYS.TRANSACTIONS);\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}