{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import SendMoneyForm from'./SendMoneyForm';import{getStoredWallet}from'../../utils/localStorage';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SendForm=_ref=>{let{initialRecipient='',onScanClick,onComplete}=_ref;const[wallet,setWallet]=useState(null);const[isOffline,setIsOffline]=useState(!navigator.onLine);const navigate=useNavigate();// Check online status\nuseEffect(()=>{const handleOnline=()=>setIsOffline(false);const handleOffline=()=>setIsOffline(true);window.addEventListener('online',handleOnline);window.addEventListener('offline',handleOffline);return()=>{window.removeEventListener('online',handleOnline);window.removeEventListener('offline',handleOffline);};},[]);// Load wallet data\nuseEffect(()=>{const storedWallet=getStoredWallet();if(storedWallet){setWallet(storedWallet);}},[]);if(!wallet){return/*#__PURE__*/_jsxs(\"div\",{className:\"loading-spinner-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading wallet information...\"})]});}const handleSuccess=updatedWallet=>{if(onComplete){onComplete(updatedWallet);}else{// Default behavior - navigate to home\nnavigate('/');}};return/*#__PURE__*/_jsx(SendMoneyForm,{wallet:wallet,isOffline:isOffline,initialRecipientAddress:initialRecipient,onClose:()=>navigate('/'),onSuccess:handleSuccess,onScanClick:onScanClick});};export default SendForm;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","SendMoneyForm","getStoredWallet","jsx","_jsx","jsxs","_jsxs","SendForm","_ref","initialRecipient","onScanClick","onComplete","wallet","setWallet","isOffline","setIsOffline","navigator","onLine","navigate","handleOnline","handleOffline","window","addEventListener","removeEventListener","storedWallet","className","children","handleSuccess","updatedWallet","initialRecipientAddress","onClose","onSuccess"],"sources":["C:/Users/user/Documents/pay/client/src/components/wallet/SendForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport SendMoneyForm from './SendMoneyForm';\r\nimport { getStoredWallet } from '../../utils/localStorage';\r\n\r\nconst SendForm = ({ initialRecipient = '', onScanClick, onComplete }) => {\r\n  const [wallet, setWallet] = useState(null);\r\n  const [isOffline, setIsOffline] = useState(!navigator.onLine);\r\n  const navigate = useNavigate();\r\n\r\n  // Check online status\r\n  useEffect(() => {\r\n    const handleOnline = () => setIsOffline(false);\r\n    const handleOffline = () => setIsOffline(true);\r\n\r\n    window.addEventListener('online', handleOnline);\r\n    window.addEventListener('offline', handleOffline);\r\n\r\n    return () => {\r\n      window.removeEventListener('online', handleOnline);\r\n      window.removeEventListener('offline', handleOffline);\r\n    };\r\n  }, []);\r\n\r\n  // Load wallet data\r\n  useEffect(() => {\r\n    const storedWallet = getStoredWallet();\r\n    if (storedWallet) {\r\n      setWallet(storedWallet);\r\n    }\r\n  }, []);\r\n\r\n  if (!wallet) {\r\n    return (\r\n      <div className=\"loading-spinner-container\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Loading wallet information...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handleSuccess = (updatedWallet) => {\r\n    if (onComplete) {\r\n      onComplete(updatedWallet);\r\n    } else {\r\n      // Default behavior - navigate to home\r\n      navigate('/');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SendMoneyForm\r\n      wallet={wallet}\r\n      isOffline={isOffline}\r\n      initialRecipientAddress={initialRecipient}\r\n      onClose={() => navigate('/')}\r\n      onSuccess={handleSuccess}\r\n      onScanClick={onScanClick}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SendForm; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,CAAAC,aAAa,KAAM,iBAAiB,CAC3C,OAASC,eAAe,KAAQ,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE3D,KAAM,CAAAC,QAAQ,CAAGC,IAAA,EAAwD,IAAvD,CAAEC,gBAAgB,CAAG,EAAE,CAAEC,WAAW,CAAEC,UAAW,CAAC,CAAAH,IAAA,CAClE,KAAM,CAACI,MAAM,CAAEC,SAAS,CAAC,CAAGf,QAAQ,CAAC,IAAI,CAAC,CAC1C,KAAM,CAACgB,SAAS,CAAEC,YAAY,CAAC,CAAGjB,QAAQ,CAAC,CAACkB,SAAS,CAACC,MAAM,CAAC,CAC7D,KAAM,CAAAC,QAAQ,CAAGlB,WAAW,CAAC,CAAC,CAE9B;AACAD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAoB,YAAY,CAAGA,CAAA,GAAMJ,YAAY,CAAC,KAAK,CAAC,CAC9C,KAAM,CAAAK,aAAa,CAAGA,CAAA,GAAML,YAAY,CAAC,IAAI,CAAC,CAE9CM,MAAM,CAACC,gBAAgB,CAAC,QAAQ,CAAEH,YAAY,CAAC,CAC/CE,MAAM,CAACC,gBAAgB,CAAC,SAAS,CAAEF,aAAa,CAAC,CAEjD,MAAO,IAAM,CACXC,MAAM,CAACE,mBAAmB,CAAC,QAAQ,CAAEJ,YAAY,CAAC,CAClDE,MAAM,CAACE,mBAAmB,CAAC,SAAS,CAAEH,aAAa,CAAC,CACtD,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN;AACArB,SAAS,CAAC,IAAM,CACd,KAAM,CAAAyB,YAAY,CAAGtB,eAAe,CAAC,CAAC,CACtC,GAAIsB,YAAY,CAAE,CAChBX,SAAS,CAACW,YAAY,CAAC,CACzB,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,GAAI,CAACZ,MAAM,CAAE,CACX,mBACEN,KAAA,QAAKmB,SAAS,CAAC,2BAA2B,CAAAC,QAAA,eACxCtB,IAAA,QAAKqB,SAAS,CAAC,iBAAiB,CAAM,CAAC,cACvCrB,IAAA,MAAAsB,QAAA,CAAG,+BAA6B,CAAG,CAAC,EACjC,CAAC,CAEV,CAEA,KAAM,CAAAC,aAAa,CAAIC,aAAa,EAAK,CACvC,GAAIjB,UAAU,CAAE,CACdA,UAAU,CAACiB,aAAa,CAAC,CAC3B,CAAC,IAAM,CACL;AACAV,QAAQ,CAAC,GAAG,CAAC,CACf,CACF,CAAC,CAED,mBACEd,IAAA,CAACH,aAAa,EACZW,MAAM,CAAEA,MAAO,CACfE,SAAS,CAAEA,SAAU,CACrBe,uBAAuB,CAAEpB,gBAAiB,CAC1CqB,OAAO,CAAEA,CAAA,GAAMZ,QAAQ,CAAC,GAAG,CAAE,CAC7Ba,SAAS,CAAEJ,aAAc,CACzBjB,WAAW,CAAEA,WAAY,CAC1B,CAAC,CAEN,CAAC,CAED,cAAe,CAAAH,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}