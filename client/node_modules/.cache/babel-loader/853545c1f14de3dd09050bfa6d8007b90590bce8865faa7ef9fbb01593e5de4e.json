{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\pay\\\\client\\\\src\\\\components\\\\wallet\\\\QRScanner.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Html5QrcodeScanner } from 'html5-qrcode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRScanner = ({\n  onClose,\n  onScanSuccess,\n  onError\n}) => {\n  _s();\n  const [scanResult, setScanResult] = useState(null);\n  const [hasFlash, setHasFlash] = useState(false);\n  const [isFlashOn, setIsFlashOn] = useState(false);\n  const [cameras, setCameras] = useState([]);\n  const [selectedCamera, setSelectedCamera] = useState(null);\n  const [scanner, setScanner] = useState(null);\n  const [error, setError] = useState(null);\n  const [isScanning, setIsScanning] = useState(false);\n  const [retryCount, setRetryCount] = useState(0);\n  const [isInitializing, setIsInitializing] = useState(true);\n\n  // Handle scan success\n  const handleScanSuccess = useCallback(decodedText => {\n    if (!isScanning) return;\n    setIsScanning(false);\n\n    // Vibrate if supported\n    if (navigator.vibrate) {\n      navigator.vibrate(200);\n    }\n    setScanResult(decodedText);\n\n    // Process and send to parent\n    try {\n      let parsedData = decodedText;\n      if (decodedText.startsWith('{') && decodedText.endsWith('}')) {\n        try {\n          parsedData = JSON.parse(decodedText);\n          if (parsedData.walletAddress) {\n            parsedData = parsedData.walletAddress;\n          }\n        } catch (e) {\n          console.log('Not valid JSON, using as is');\n        }\n      }\n      onScanSuccess(parsedData);\n    } catch (err) {\n      console.error('Error handling scan data:', err);\n      setError('Invalid QR code format. Please try again.');\n    }\n  }, [isScanning, onScanSuccess]);\n\n  // Initialize the scanner\n  const initializeScanner = useCallback(() => {\n    if (scanner) {\n      try {\n        scanner.clear();\n      } catch (e) {\n        console.log('Error clearing previous scanner:', e);\n      }\n    }\n    setIsInitializing(true);\n\n    // Calculate optimal QR box size\n    const screenWidth = window.innerWidth;\n    const qrBoxSize = Math.min(screenWidth * 0.7, 250);\n    try {\n      // Create scanner with basic config for maximum compatibility\n      const newScanner = new Html5QrcodeScanner('reader', {\n        qrbox: qrBoxSize,\n        fps: 2,\n        // Lower FPS for better performance\n        rememberLastUsedCamera: false,\n        aspectRatio: 1.0,\n        showTorchButtonIfSupported: false,\n        supportedScanTypes: [Html5QrcodeScanner.SCAN_TYPE_CAMERA]\n      }, false); // Don't render immediately\n\n      setScanner(newScanner);\n      setIsScanning(true);\n\n      // Wait for DOM to be ready\n      setTimeout(() => {\n        try {\n          newScanner.render(decodedText => {\n            handleScanSuccess(decodedText);\n\n            // Try to stop scanner after successful scan\n            try {\n              newScanner.clear();\n            } catch (e) {\n              console.log('Error clearing scanner after success:', e);\n            }\n          }, errorMessage => {\n            console.warn('Scanner error:', errorMessage);\n            // Only set error if we're still initializing\n            if (isInitializing) {\n              setError('Could not access camera. Please check permissions and try again.');\n              setIsInitializing(false);\n            }\n          });\n          setIsInitializing(false);\n        } catch (err) {\n          console.error('Error rendering scanner:', err);\n          setError('Failed to initialize camera. Please try again or check camera permissions.');\n          setIsInitializing(false);\n          if (onError) {\n            onError('Failed to initialize camera.');\n          }\n        }\n      }, 1500);\n    } catch (err) {\n      console.error('Error creating scanner:', err);\n      setError('Failed to initialize QR scanner. Please refresh and try again.');\n      setIsInitializing(false);\n    }\n  }, [scanner, handleScanSuccess, onError, isInitializing]);\n\n  // Check camera access on component mount\n  useEffect(() => {\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      navigator.mediaDevices.getUserMedia({\n        video: true\n      }).then(() => {\n        // Try to get camera list first\n        Html5QrcodeScanner.getCameras().then(devices => {\n          setCameras(devices);\n          if (devices.length > 0) {\n            setSelectedCamera(devices[0].id);\n          }\n          // Short delay before initializing\n          setTimeout(initializeScanner, 500);\n        }).catch(() => {\n          // Proceed with initialization even if we can't get camera list\n          setTimeout(initializeScanner, 500);\n        });\n      }).catch(err => {\n        console.error('Camera access error:', err);\n        setError('Camera access denied. Please check your browser permissions.');\n        setIsInitializing(false);\n        if (onError) {\n          onError('Camera access denied. Please check permissions in your browser settings.');\n        }\n      });\n    } else {\n      setError('Your browser does not support camera access. Please try a different browser.');\n      setIsInitializing(false);\n    }\n    return () => {\n      // Clean up on unmount\n      if (scanner) {\n        try {\n          scanner.clear();\n        } catch (e) {\n          console.log('Error clearing scanner on unmount:', e);\n        }\n      }\n    };\n  }, [initializeScanner, onError]);\n\n  // Handle retry\n  const handleRetry = () => {\n    setError(null);\n    setRetryCount(prev => prev + 1);\n    setIsInitializing(true);\n\n    // Clean up previous scanner\n    if (scanner) {\n      try {\n        scanner.clear();\n      } catch (e) {\n        console.log('Error clearing scanner on retry:', e);\n      }\n    }\n\n    // Small delay before reinitializing\n    setTimeout(initializeScanner, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"qr-scanner my-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scanner-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), \" Scan QR Code\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"scanner-instructions\",\n      children: \"Point your camera at a wallet QR code to scan it\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), isInitializing && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-spinner fa-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this), \" Initializing camera...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-exclamation-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this), \" \", error, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-sm btn-primary mr-2\",\n          onClick: handleRetry,\n          children: \"Retry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-sm btn-light\",\n          onClick: () => setError(null),\n          children: \"Dismiss\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }, this), scanResult ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scan-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-check-circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Scan successful!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), \" Address detected.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: onClose,\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scan-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"reader\",\n        className: \"reader-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-light mt-3\",\n        onClick: onClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n_s(QRScanner, \"E+Ttbm3QRf/bBYITr2gwbZkXwQM=\");\n_c = QRScanner;\nexport default QRScanner;\nvar _c;\n$RefreshReg$(_c, \"QRScanner\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Html5QrcodeScanner","jsxDEV","_jsxDEV","QRScanner","onClose","onScanSuccess","onError","_s","scanResult","setScanResult","hasFlash","setHasFlash","isFlashOn","setIsFlashOn","cameras","setCameras","selectedCamera","setSelectedCamera","scanner","setScanner","error","setError","isScanning","setIsScanning","retryCount","setRetryCount","isInitializing","setIsInitializing","handleScanSuccess","decodedText","navigator","vibrate","parsedData","startsWith","endsWith","JSON","parse","walletAddress","e","console","log","err","initializeScanner","clear","screenWidth","window","innerWidth","qrBoxSize","Math","min","newScanner","qrbox","fps","rememberLastUsedCamera","aspectRatio","showTorchButtonIfSupported","supportedScanTypes","SCAN_TYPE_CAMERA","setTimeout","render","errorMessage","warn","mediaDevices","getUserMedia","video","then","getCameras","devices","length","id","catch","handleRetry","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/pay/client/src/components/wallet/QRScanner.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Html5QrcodeScanner } from 'html5-qrcode';\r\n\r\nconst QRScanner = ({ onClose, onScanSuccess, onError }) => {\r\n  const [scanResult, setScanResult] = useState(null);\r\n  const [hasFlash, setHasFlash] = useState(false);\r\n  const [isFlashOn, setIsFlashOn] = useState(false);\r\n  const [cameras, setCameras] = useState([]);\r\n  const [selectedCamera, setSelectedCamera] = useState(null);\r\n  const [scanner, setScanner] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [isScanning, setIsScanning] = useState(false);\r\n  const [retryCount, setRetryCount] = useState(0);\r\n  const [isInitializing, setIsInitializing] = useState(true);\r\n\r\n  // Handle scan success\r\n  const handleScanSuccess = useCallback((decodedText) => {\r\n        if (!isScanning) return;\r\n        setIsScanning(false);\r\n        \r\n        // Vibrate if supported\r\n        if (navigator.vibrate) {\r\n          navigator.vibrate(200);\r\n        }\r\n        \r\n        setScanResult(decodedText);\r\n        \r\n    // Process and send to parent\r\n          try {\r\n            let parsedData = decodedText;\r\n            if (decodedText.startsWith('{') && decodedText.endsWith('}')) {\r\n              try {\r\n                parsedData = JSON.parse(decodedText);\r\n                if (parsedData.walletAddress) {\r\n                  parsedData = parsedData.walletAddress;\r\n                }\r\n              } catch (e) {\r\n                console.log('Not valid JSON, using as is');\r\n              }\r\n            }\r\n            onScanSuccess(parsedData);\r\n          } catch (err) {\r\n            console.error('Error handling scan data:', err);\r\n            setError('Invalid QR code format. Please try again.');\r\n          }\r\n  }, [isScanning, onScanSuccess]);\r\n\r\n  // Initialize the scanner\r\n  const initializeScanner = useCallback(() => {\r\n    if (scanner) {\r\n      try {\r\n        scanner.clear();\r\n      } catch (e) {\r\n        console.log('Error clearing previous scanner:', e);\r\n      }\r\n    }\r\n\r\n    setIsInitializing(true);\r\n    \r\n    // Calculate optimal QR box size\r\n    const screenWidth = window.innerWidth;\r\n    const qrBoxSize = Math.min(screenWidth * 0.7, 250);\r\n    \r\n    try {\r\n      // Create scanner with basic config for maximum compatibility\r\n      const newScanner = new Html5QrcodeScanner('reader', {\r\n        qrbox: qrBoxSize,\r\n        fps: 2, // Lower FPS for better performance\r\n        rememberLastUsedCamera: false,\r\n        aspectRatio: 1.0,\r\n        showTorchButtonIfSupported: false,\r\n        supportedScanTypes: [Html5QrcodeScanner.SCAN_TYPE_CAMERA]\r\n      }, false); // Don't render immediately\r\n\r\n      setScanner(newScanner);\r\n      setIsScanning(true);\r\n\r\n      // Wait for DOM to be ready\r\n      setTimeout(() => {\r\n        try {\r\n          newScanner.render((decodedText) => {\r\n            handleScanSuccess(decodedText);\r\n            \r\n            // Try to stop scanner after successful scan\r\n            try {\r\n              newScanner.clear();\r\n            } catch (e) {\r\n              console.log('Error clearing scanner after success:', e);\r\n            }\r\n          }, (errorMessage) => {\r\n            console.warn('Scanner error:', errorMessage);\r\n            // Only set error if we're still initializing\r\n            if (isInitializing) {\r\n              setError('Could not access camera. Please check permissions and try again.');\r\n              setIsInitializing(false);\r\n            }\r\n          });\r\n          \r\n          setIsInitializing(false);\r\n        } catch (err) {\r\n          console.error('Error rendering scanner:', err);\r\n          setError('Failed to initialize camera. Please try again or check camera permissions.');\r\n          setIsInitializing(false);\r\n          \r\n          if (onError) {\r\n            onError('Failed to initialize camera.');\r\n          }\r\n        }\r\n      }, 1500);\r\n\r\n    } catch (err) {\r\n      console.error('Error creating scanner:', err);\r\n      setError('Failed to initialize QR scanner. Please refresh and try again.');\r\n      setIsInitializing(false);\r\n    }\r\n  }, [scanner, handleScanSuccess, onError, isInitializing]);\r\n\r\n  // Check camera access on component mount\r\n  useEffect(() => {\r\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n      navigator.mediaDevices.getUserMedia({ video: true })\r\n        .then(() => {\r\n          // Try to get camera list first\r\n          Html5QrcodeScanner.getCameras()\r\n            .then(devices => {\r\n              setCameras(devices);\r\n              if (devices.length > 0) {\r\n                setSelectedCamera(devices[0].id);\r\n              }\r\n              // Short delay before initializing\r\n              setTimeout(initializeScanner, 500);\r\n            })\r\n            .catch(() => {\r\n              // Proceed with initialization even if we can't get camera list\r\n              setTimeout(initializeScanner, 500);\r\n            });\r\n        })\r\n        .catch(err => {\r\n          console.error('Camera access error:', err);\r\n          setError('Camera access denied. Please check your browser permissions.');\r\n          setIsInitializing(false);\r\n          \r\n          if (onError) {\r\n            onError('Camera access denied. Please check permissions in your browser settings.');\r\n          }\r\n        });\r\n    } else {\r\n      setError('Your browser does not support camera access. Please try a different browser.');\r\n      setIsInitializing(false);\r\n    }\r\n\r\n    return () => {\r\n      // Clean up on unmount\r\n      if (scanner) {\r\n        try {\r\n          scanner.clear();\r\n        } catch (e) {\r\n          console.log('Error clearing scanner on unmount:', e);\r\n        }\r\n      }\r\n    };\r\n  }, [initializeScanner, onError]);\r\n\r\n  // Handle retry\r\n  const handleRetry = () => {\r\n    setError(null);\r\n    setRetryCount(prev => prev + 1);\r\n    setIsInitializing(true);\r\n    \r\n    // Clean up previous scanner\r\n    if (scanner) {\r\n      try {\r\n        scanner.clear();\r\n      } catch (e) {\r\n        console.log('Error clearing scanner on retry:', e);\r\n      }\r\n    }\r\n    \r\n    // Small delay before reinitializing\r\n    setTimeout(initializeScanner, 1000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"qr-scanner my-4\">\r\n      <div className=\"scanner-header\">\r\n        <h3>\r\n          <i className=\"fas fa-camera\"></i> Scan QR Code\r\n        </h3>\r\n      </div>\r\n      \r\n      <p className=\"scanner-instructions\">\r\n        Point your camera at a wallet QR code to scan it\r\n      </p>\r\n      \r\n      {isInitializing && (\r\n        <div className=\"alert alert-info\">\r\n          <i className=\"fas fa-spinner fa-spin\"></i> Initializing camera...\r\n        </div>\r\n      )}\r\n      \r\n      {error && (\r\n        <div className=\"alert alert-danger\">\r\n          <i className=\"fas fa-exclamation-circle\"></i> {error}\r\n          <div className=\"mt-2\">\r\n            <button \r\n              className=\"btn btn-sm btn-primary mr-2\"\r\n              onClick={handleRetry}\r\n            >\r\n              Retry\r\n            </button>\r\n            <button \r\n              className=\"btn btn-sm btn-light\"\r\n              onClick={() => setError(null)}\r\n            >\r\n              Dismiss\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {scanResult ? (\r\n        <div className=\"scan-result\">\r\n          <div className=\"alert alert-success\">\r\n            <i className=\"fas fa-check-circle\"></i>\r\n            <strong>Scan successful!</strong> Address detected.\r\n          </div>\r\n          <button \r\n            className=\"btn btn-primary\"\r\n            onClick={onClose}\r\n          >\r\n            Continue\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"scan-container\">\r\n          <div id=\"reader\" className=\"reader-container\"></div>\r\n          <button \r\n            className=\"btn btn-light mt-3\"\r\n            onClick={onClose}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRScanner; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}