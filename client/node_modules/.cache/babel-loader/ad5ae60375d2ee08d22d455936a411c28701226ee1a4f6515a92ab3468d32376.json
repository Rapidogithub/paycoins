{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{getStoredWallet,storeWallet,getStoredTransactions,storeTransactions}from'../../utils/localStorage';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SendMoneyForm=_ref=>{let{onClose,onSuccess,initialRecipientAddress='',wallet,isOffline}=_ref;const[formData,setFormData]=useState({receiverWalletAddress:initialRecipientAddress,receiverPayId:'',amount:'',sendMethod:'address'// 'address' or 'payId'\n});const[error,setError]=useState('');const[success,setSuccess]=useState('');const[loading,setLoading]=useState(false);const[lookupResult,setLookupResult]=useState(null);useEffect(()=>{if(initialRecipientAddress){setFormData(prev=>({...prev,receiverWalletAddress:initialRecipientAddress,sendMethod:'address'}));}},[initialRecipientAddress]);const{receiverWalletAddress,receiverPayId,amount,sendMethod}=formData;const validateForm=()=>{if(sendMethod==='address'&&!receiverWalletAddress){setError('Recipient account ID is required');return false;}if(sendMethod==='payId'&&(!receiverPayId||receiverPayId.length!==4)){setError('Please enter a valid 4-digit PAY ID');return false;}const parsedAmount=parseFloat(amount);if(!parsedAmount||parsedAmount<=0){setError('Please enter a valid amount greater than 0');return false;}if(parsedAmount>wallet.balance){setError('Insufficient balance for this transaction');return false;}return true;};const onChange=e=>{const{name,value}=e.target;setFormData(prev=>({...prev,[name]:value}));setError('');// Clear error when user makes changes\n// Clear lookup result when changing recipient info\nif(name==='receiverPayId'||name==='receiverWalletAddress'){setLookupResult(null);}};const handleSendMethodChange=method=>{setFormData(prev=>({...prev,sendMethod:method,receiverWalletAddress:method==='address'?initialRecipientAddress:'',receiverPayId:''}));setLookupResult(null);setError('');};const lookupPayId=async()=>{if(!receiverPayId||receiverPayId.length!==4){setError('Please enter a valid 4-digit PAY ID');return;}try{setLoading(true);setError('');const res=await axios.get(`/api/users/find/${receiverPayId}`);// Prevent sending to self\nif(res.data.payId===wallet.payId){setError('Cannot send money to yourself');setLookupResult(null);}else{setLookupResult(res.data);}}catch(err){var _err$response,_err$response$data;setLookupResult(null);setError(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.msg)||'Failed to find user with this PAY ID');}finally{setLoading(false);}};const handleOfflineTransaction=()=>{if(!validateForm())return false;const parsedAmount=parseFloat(amount);// Additional offline mode validations\nif(sendMethod==='payId'){setError('PAY ID transfers are not available in offline mode');return false;}if(wallet.walletAddress===receiverWalletAddress){setError('Cannot send money to yourself');return false;}// Create offline transaction\nconst offlineTransaction={id:`offline-${Date.now()}`,senderWalletAddress:wallet.walletAddress,receiverWalletAddress,amount:parsedAmount,date:new Date(),isPending:true};// Update wallet balance locally\nconst updatedWallet={...wallet,balance:wallet.balance-parsedAmount};// Save to localStorage\ntry{const transactions=getStoredTransactions();storeTransactions([offlineTransaction,...transactions]);storeWallet(updatedWallet);return updatedWallet;}catch(err){setError('Failed to save offline transaction');return false;}};const onSubmit=async e=>{e.preventDefault();setError('');setSuccess('');setLoading(true);if(!validateForm()){setLoading(false);return;}try{if(isOffline){const updatedWallet=handleOfflineTransaction();if(updatedWallet){setSuccess('Transaction saved and will be processed when back online');// Reset form\nsetFormData({receiverWalletAddress:'',receiverPayId:'',amount:'',sendMethod:'address'});if(onSuccess){onSuccess(updatedWallet);}}}else{// Online mode\nconst transactionData={amount:parseFloat(amount)};if(sendMethod==='address'){transactionData.receiverWalletAddress=receiverWalletAddress;}else{transactionData.receiverPayId=receiverPayId;}const res=await axios.post('/api/transactions',transactionData);setSuccess('Transaction completed successfully!');// Reset form\nsetFormData({receiverWalletAddress:'',receiverPayId:'',amount:'',sendMethod:'address'});if(onSuccess){onSuccess();}}}catch(err){var _err$response2,_err$response2$data;setError(((_err$response2=err.response)===null||_err$response2===void 0?void 0:(_err$response2$data=_err$response2.data)===null||_err$response2$data===void 0?void 0:_err$response2$data.msg)||'Transaction failed. Please check your input and try again.');}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"send-form card my-4 p-4\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-paper-plane\"}),\" Send Money\"]}),isOffline&&/*#__PURE__*/_jsxs(\"div\",{className:\"alert alert-info\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-info-circle\"}),\" You are offline. Transactions will be saved locally and processed when you're back online.\"]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-danger\",children:error}),success&&/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-success\",children:success}),/*#__PURE__*/_jsxs(\"div\",{className:\"send-method-tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:`tab-btn ${sendMethod==='address'?'active':''}`,onClick:()=>handleSendMethodChange('address'),children:\"Send by Address\"}),/*#__PURE__*/_jsx(\"button\",{className:`tab-btn ${sendMethod==='payId'?'active':''}`,onClick:()=>handleSendMethodChange('payId'),disabled:isOffline,children:\"Send by PAY ID\"})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:onSubmit,children:[sendMethod==='address'?/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"receiverWalletAddress\",children:\"Recipient Account Address\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"receiverWalletAddress\",id:\"receiverWalletAddress\",value:receiverWalletAddress,onChange:onChange,required:sendMethod==='address',disabled:sendMethod!=='address'})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"receiverPayId\",children:\"Recipient PAY ID (4 digits)\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"pay-id-lookup-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"receiverPayId\",id:\"receiverPayId\",value:receiverPayId,onChange:onChange,pattern:\"[0-9]{4}\",maxLength:\"4\",required:sendMethod==='payId',disabled:sendMethod!=='payId'||isOffline}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-sm btn-info\",onClick:lookupPayId,disabled:loading||!receiverPayId||receiverPayId.length!==4,children:\"Lookup\"})]}),lookupResult&&/*#__PURE__*/_jsx(\"div\",{className:\"lookup-result\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Recipient found: \",/*#__PURE__*/_jsx(\"strong\",{children:lookupResult.username})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"amount\",children:\"Amount (PAY)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",name:\"amount\",id:\"amount\",value:amount,onChange:onChange,step:\"0.01\",min:\"0.01\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"btn-group\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",disabled:loading,children:loading?'Processing...':'Send'}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-light\",onClick:onClose,children:\"Cancel\"})]})]})]});};export default SendMoneyForm;","map":{"version":3,"names":["React","useState","useEffect","axios","getStoredWallet","storeWallet","getStoredTransactions","storeTransactions","jsx","_jsx","jsxs","_jsxs","SendMoneyForm","_ref","onClose","onSuccess","initialRecipientAddress","wallet","isOffline","formData","setFormData","receiverWalletAddress","receiverPayId","amount","sendMethod","error","setError","success","setSuccess","loading","setLoading","lookupResult","setLookupResult","prev","validateForm","length","parsedAmount","parseFloat","balance","onChange","e","name","value","target","handleSendMethodChange","method","lookupPayId","res","get","data","payId","err","_err$response","_err$response$data","response","msg","handleOfflineTransaction","walletAddress","offlineTransaction","id","Date","now","senderWalletAddress","date","isPending","updatedWallet","transactions","onSubmit","preventDefault","transactionData","post","_err$response2","_err$response2$data","className","children","onClick","disabled","htmlFor","type","required","pattern","maxLength","username","step","min"],"sources":["C:/Users/user/Documents/pay/client/src/components/wallet/SendMoneyForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { getStoredWallet, storeWallet, getStoredTransactions, storeTransactions } from '../../utils/localStorage';\r\n\r\nconst SendMoneyForm = ({ onClose, onSuccess, initialRecipientAddress = '', wallet, isOffline }) => {\r\n  const [formData, setFormData] = useState({\r\n    receiverWalletAddress: initialRecipientAddress,\r\n    receiverPayId: '',\r\n    amount: '',\r\n    sendMethod: 'address' // 'address' or 'payId'\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [lookupResult, setLookupResult] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (initialRecipientAddress) {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        receiverWalletAddress: initialRecipientAddress,\r\n        sendMethod: 'address'\r\n      }));\r\n    }\r\n  }, [initialRecipientAddress]);\r\n\r\n  const { receiverWalletAddress, receiverPayId, amount, sendMethod } = formData;\r\n\r\n  const validateForm = () => {\r\n    if (sendMethod === 'address' && !receiverWalletAddress) {\r\n      setError('Recipient account ID is required');\r\n      return false;\r\n    }\r\n    \r\n    if (sendMethod === 'payId' && (!receiverPayId || receiverPayId.length !== 4)) {\r\n      setError('Please enter a valid 4-digit PAY ID');\r\n      return false;\r\n    }\r\n    \r\n    const parsedAmount = parseFloat(amount);\r\n    if (!parsedAmount || parsedAmount <= 0) {\r\n      setError('Please enter a valid amount greater than 0');\r\n      return false;\r\n    }\r\n    \r\n    if (parsedAmount > wallet.balance) {\r\n      setError('Insufficient balance for this transaction');\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n    setError(''); // Clear error when user makes changes\r\n    \r\n    // Clear lookup result when changing recipient info\r\n    if (name === 'receiverPayId' || name === 'receiverWalletAddress') {\r\n      setLookupResult(null);\r\n    }\r\n  };\r\n\r\n  const handleSendMethodChange = (method) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      sendMethod: method,\r\n      receiverWalletAddress: method === 'address' ? initialRecipientAddress : '',\r\n      receiverPayId: ''\r\n    }));\r\n    setLookupResult(null);\r\n    setError('');\r\n  };\r\n\r\n  const lookupPayId = async () => {\r\n    if (!receiverPayId || receiverPayId.length !== 4) {\r\n      setError('Please enter a valid 4-digit PAY ID');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      setError('');\r\n      const res = await axios.get(`/api/users/find/${receiverPayId}`);\r\n      \r\n      // Prevent sending to self\r\n      if (res.data.payId === wallet.payId) {\r\n        setError('Cannot send money to yourself');\r\n        setLookupResult(null);\r\n      } else {\r\n        setLookupResult(res.data);\r\n      }\r\n    } catch (err) {\r\n      setLookupResult(null);\r\n      setError(err.response?.data?.msg || 'Failed to find user with this PAY ID');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleOfflineTransaction = () => {\r\n    if (!validateForm()) return false;\r\n    \r\n    const parsedAmount = parseFloat(amount);\r\n    \r\n    // Additional offline mode validations\r\n    if (sendMethod === 'payId') {\r\n      setError('PAY ID transfers are not available in offline mode');\r\n      return false;\r\n    }\r\n    \r\n    if (wallet.walletAddress === receiverWalletAddress) {\r\n      setError('Cannot send money to yourself');\r\n      return false;\r\n    }\r\n    \r\n    // Create offline transaction\r\n    const offlineTransaction = {\r\n      id: `offline-${Date.now()}`,\r\n      senderWalletAddress: wallet.walletAddress,\r\n      receiverWalletAddress,\r\n      amount: parsedAmount,\r\n      date: new Date(),\r\n      isPending: true\r\n    };\r\n    \r\n    // Update wallet balance locally\r\n    const updatedWallet = {\r\n      ...wallet,\r\n      balance: wallet.balance - parsedAmount\r\n    };\r\n    \r\n    // Save to localStorage\r\n    try {\r\n      const transactions = getStoredTransactions();\r\n      storeTransactions([offlineTransaction, ...transactions]);\r\n      storeWallet(updatedWallet);\r\n      return updatedWallet;\r\n    } catch (err) {\r\n      setError('Failed to save offline transaction');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess('');\r\n    setLoading(true);\r\n\r\n    if (!validateForm()) {\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (isOffline) {\r\n        const updatedWallet = handleOfflineTransaction();\r\n        if (updatedWallet) {\r\n          setSuccess('Transaction saved and will be processed when back online');\r\n          \r\n          // Reset form\r\n          setFormData({\r\n            receiverWalletAddress: '',\r\n            receiverPayId: '',\r\n            amount: '',\r\n            sendMethod: 'address'\r\n          });\r\n          \r\n          if (onSuccess) {\r\n            onSuccess(updatedWallet);\r\n          }\r\n        }\r\n      } else {\r\n        // Online mode\r\n        const transactionData = {\r\n          amount: parseFloat(amount)\r\n        };\r\n        \r\n        if (sendMethod === 'address') {\r\n          transactionData.receiverWalletAddress = receiverWalletAddress;\r\n        } else {\r\n          transactionData.receiverPayId = receiverPayId;\r\n        }\r\n        \r\n        const res = await axios.post('/api/transactions', transactionData);\r\n        \r\n        setSuccess('Transaction completed successfully!');\r\n        \r\n        // Reset form\r\n        setFormData({\r\n          receiverWalletAddress: '',\r\n          receiverPayId: '',\r\n          amount: '',\r\n          sendMethod: 'address'\r\n        });\r\n        \r\n        if (onSuccess) {\r\n          onSuccess();\r\n        }\r\n      }\r\n    } catch (err) {\r\n      setError(\r\n        err.response?.data?.msg || \r\n        'Transaction failed. Please check your input and try again.'\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"send-form card my-4 p-4\">\r\n      <h3>\r\n        <i className=\"fas fa-paper-plane\"></i> Send Money\r\n      </h3>\r\n      \r\n      {isOffline && (\r\n        <div className=\"alert alert-info\">\r\n          <i className=\"fas fa-info-circle\"></i> You are offline. Transactions will be saved locally and processed when you're back online.\r\n        </div>\r\n      )}\r\n      \r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n      {success && <div className=\"alert alert-success\">{success}</div>}\r\n      \r\n      <div className=\"send-method-tabs\">\r\n        <button \r\n          className={`tab-btn ${sendMethod === 'address' ? 'active' : ''}`}\r\n          onClick={() => handleSendMethodChange('address')}\r\n        >\r\n          Send by Address\r\n        </button>\r\n        <button \r\n          className={`tab-btn ${sendMethod === 'payId' ? 'active' : ''}`}\r\n          onClick={() => handleSendMethodChange('payId')}\r\n          disabled={isOffline}\r\n        >\r\n          Send by PAY ID\r\n        </button>\r\n      </div>\r\n      \r\n      <form onSubmit={onSubmit}>\r\n        {sendMethod === 'address' ? (\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"receiverWalletAddress\">Recipient Account Address</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"receiverWalletAddress\"\r\n              id=\"receiverWalletAddress\"\r\n              value={receiverWalletAddress}\r\n              onChange={onChange}\r\n              required={sendMethod === 'address'}\r\n              disabled={sendMethod !== 'address'}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"receiverPayId\">Recipient PAY ID (4 digits)</label>\r\n            <div className=\"pay-id-lookup-container\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"receiverPayId\"\r\n                id=\"receiverPayId\"\r\n                value={receiverPayId}\r\n                onChange={onChange}\r\n                pattern=\"[0-9]{4}\"\r\n                maxLength=\"4\"\r\n                required={sendMethod === 'payId'}\r\n                disabled={sendMethod !== 'payId' || isOffline}\r\n              />\r\n              <button \r\n                type=\"button\" \r\n                className=\"btn btn-sm btn-info\" \r\n                onClick={lookupPayId}\r\n                disabled={loading || !receiverPayId || receiverPayId.length !== 4}\r\n              >\r\n                Lookup\r\n              </button>\r\n            </div>\r\n            \r\n            {lookupResult && (\r\n              <div className=\"lookup-result\">\r\n                <p>Recipient found: <strong>{lookupResult.username}</strong></p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"amount\">Amount (PAY)</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"amount\"\r\n            id=\"amount\"\r\n            value={amount}\r\n            onChange={onChange}\r\n            step=\"0.01\"\r\n            min=\"0.01\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"btn-group\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary\"\r\n            disabled={loading}\r\n          >\r\n            {loading ? 'Processing...' : 'Send'}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n            onClick={onClose}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SendMoneyForm; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}