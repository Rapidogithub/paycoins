{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{QRCodeSVG}from'qrcode.react';import SendMoneyForm from'../components/wallet/SendMoneyForm';import QRScanner from'../components/wallet/QRScanner';import LimitSettingsModal from'../components/wallet/LimitSettingsModal';import{getStoredWallet,storeWallet,getStoredTransactions}from'../utils/localStorage';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=()=>{const[wallet,setWallet]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState('');const[qrCode,setQrCode]=useState(null);const[showQR,setShowQR]=useState(false);const[showSendForm,setShowSendForm]=useState(false);const[showScanner,setShowScanner]=useState(false);const[showLimitSettings,setShowLimitSettings]=useState(false);const[recipientAddress,setRecipientAddress]=useState('');const[isOffline,setIsOffline]=useState(!navigator.onLine);const[stats,setStats]=useState({totalSent:0,totalReceived:0,transactionCount:0});// Check online status\nuseEffect(()=>{const handleOnline=()=>setIsOffline(false);const handleOffline=()=>setIsOffline(true);window.addEventListener('online',handleOnline);window.addEventListener('offline',handleOffline);return()=>{window.removeEventListener('online',handleOnline);window.removeEventListener('offline',handleOffline);};},[]);// Calculate wallet statistics\nuseEffect(()=>{if(wallet){const transactions=getStoredTransactions();let sent=0;let received=0;let count=0;transactions.forEach(transaction=>{if(transaction.senderWalletAddress===wallet.walletAddress){sent+=parseFloat(transaction.amount);count++;}if(transaction.receiverWalletAddress===wallet.walletAddress){received+=parseFloat(transaction.amount);count++;}});setStats({totalSent:sent,totalReceived:received,transactionCount:count});}},[wallet]);useEffect(()=>{const getWallet=async()=>{try{// Try to get wallet from API if online\nif(navigator.onLine){const res=await axios.get('/api/wallets');const walletData=res.data;// Keep local settings like limits\nconst storedWallet=getStoredWallet();const mergedWallet={...walletData,dailyLimit:(storedWallet===null||storedWallet===void 0?void 0:storedWallet.dailyLimit)||0,monthlyLimit:(storedWallet===null||storedWallet===void 0?void 0:storedWallet.monthlyLimit)||0,enableLimits:(storedWallet===null||storedWallet===void 0?void 0:storedWallet.enableLimits)||false};setWallet(mergedWallet);storeWallet(mergedWallet);// Save to localStorage\n}else{// Use localStorage data when offline\nconst storedWallet=getStoredWallet();if(storedWallet){setWallet(storedWallet);}else{setError('No wallet data available offline');}}setLoading(false);}catch(err){console.error('Error loading wallet:',err);// Try localStorage as fallback\nconst storedWallet=getStoredWallet();if(storedWallet){setWallet(storedWallet);}else{setError('Failed to load wallet data');}setLoading(false);}};getWallet();},[]);const generateQRCode=async()=>{try{setError('');setShowQR(true);if(navigator.onLine){const res=await axios.get('/api/wallets/generate-qr');if(res.data&&res.data.qrCode){setQrCode(res.data.qrCode);}else{throw new Error('Invalid QR code data received');}}else{// For offline mode, we'll generate a QR code with wallet data\nconst walletData=JSON.stringify({walletAddress:wallet.walletAddress,payId:wallet.payId,type:'PAY_WALLET'});setQrCode(walletData);}}catch(err){console.error('QR Code generation error:',err);setError('Failed to generate QR code. Please try again.');setQrCode(null);}};const closeQR=()=>{setShowQR(false);};const openSendForm=()=>{setShowSendForm(true);setShowScanner(false);setShowQR(false);};const closeSendForm=()=>{setShowSendForm(false);setRecipientAddress('');};const openScanner=()=>{if(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia){setShowScanner(true);setShowSendForm(false);setShowQR(false);}else{setError('Camera access not available on your device');}};const closeScanner=()=>{setShowScanner(false);};const openLimitSettings=()=>{setShowLimitSettings(true);};const closeLimitSettings=updatedWallet=>{if(updatedWallet){setWallet(updatedWallet);}setShowLimitSettings(false);};const handleScanSuccess=data=>{setRecipientAddress(data);setShowScanner(false);setShowSendForm(true);};const handleTransactionSuccess=async updatedWallet=>{if(updatedWallet){// If we got an updated wallet directly (offline mode)\nsetWallet(updatedWallet);storeWallet(updatedWallet);}else if(navigator.onLine){// If online, fetch the latest wallet\ntry{const res=await axios.get('/api/wallets');// Merge with local settings\nconst mergedWallet={...res.data,dailyLimit:wallet.dailyLimit,monthlyLimit:wallet.monthlyLimit,enableLimits:wallet.enableLimits};setWallet(mergedWallet);storeWallet(mergedWallet);}catch(err){setError('Failed to refresh wallet data');}}setShowSendForm(false);setRecipientAddress('');};if(loading){return/*#__PURE__*/_jsxs(\"div\",{className:\"loading-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading wallet data...\"})]});}if(error){return/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-danger\",children:error});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-center my-4\",children:\"Dashboard\"}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"alert alert-danger\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-exclamation-circle\"}),\" \",error]}),isOffline&&/*#__PURE__*/_jsxs(\"div\",{className:\"alert alert-warning\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-wifi-slash\"}),\" You are currently offline. Some features may be limited.\"]}),wallet&&/*#__PURE__*/_jsxs(\"div\",{className:\"wallet-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"wallet-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Your PAY Account\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-light btn-sm\",onClick:openLimitSettings,title:\"Set spending limits\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-sliders-h\"})})]}),wallet.payId&&/*#__PURE__*/_jsxs(\"div\",{className:\"pay-id-container\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"pay-id-heading\",children:[\"Your PAY ID: \",/*#__PURE__*/_jsx(\"span\",{className:\"pay-id\",children:wallet.payId})]}),/*#__PURE__*/_jsx(\"p\",{className:\"pay-id-info\",children:\"Share this 4-digit ID to easily receive money\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"Account ID:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"wallet-address\",children:wallet.walletAddress})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"wallet-balance\",children:[\"Balance: \",wallet.balance,\" PAY\"]}),wallet.enableLimits&&/*#__PURE__*/_jsxs(\"div\",{className:\"limits-info\",children:[wallet.dailyLimit>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"limit-item\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-calendar-day\"}),\" Daily Limit: \",wallet.dailyLimit,\" PAY\"]}),wallet.monthlyLimit>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"limit-item\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-calendar-alt\"}),\" Monthly Limit: \",wallet.monthlyLimit,\" PAY\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"wallet-controls\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-primary\",onClick:generateQRCode,children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-qrcode\"}),\" Generate QR Code\"]}),/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-secondary\",onClick:openSendForm,children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-paper-plane\"}),\" Send Money\"]}),/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-dark\",onClick:openScanner,disabled:isOffline,children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-camera\"}),\" Scan QR Code\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stats-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"feature-icon\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-arrow-up\"})}),/*#__PURE__*/_jsx(\"h3\",{children:\"Sent\"}),/*#__PURE__*/_jsxs(\"p\",{children:[stats.totalSent.toFixed(2),\" PAY\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"feature-icon\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-arrow-down\"})}),/*#__PURE__*/_jsx(\"h3\",{children:\"Received\"}),/*#__PURE__*/_jsxs(\"p\",{children:[stats.totalReceived.toFixed(2),\" PAY\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"feature-icon\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-exchange-alt\"})}),/*#__PURE__*/_jsx(\"h3\",{children:\"Transactions\"}),/*#__PURE__*/_jsx(\"p\",{children:stats.transactionCount})]})]}),showQR&&/*#__PURE__*/_jsxs(\"div\",{className:\"qr-container\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Your PAY Account QR Code\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Scan this code to receive money\"}),qrCode?navigator.onLine?/*#__PURE__*/_jsx(\"img\",{src:qrCode,alt:\"PAY QR Code\",style:{maxWidth:'100%',width:'250px'}}):/*#__PURE__*/_jsx(QRCodeSVG,{value:qrCode,size:250,level:\"H\",includeMargin:true,bgColor:\"#ffffff\",fgColor:\"#000000\"}):/*#__PURE__*/_jsxs(\"div\",{className:\"alert alert-danger\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-exclamation-circle\"}),\" Failed to generate QR code\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-light mt-3\",onClick:()=>{setShowQR(false);setQrCode(null);},children:\"Close\"})]}),showSendForm&&/*#__PURE__*/_jsx(SendMoneyForm,{onClose:closeSendForm,onSuccess:handleTransactionSuccess,initialRecipientAddress:recipientAddress,wallet:wallet,isOffline:isOffline}),showScanner&&/*#__PURE__*/_jsx(QRScanner,{onClose:closeScanner,onScanSuccess:handleScanSuccess}),showLimitSettings&&/*#__PURE__*/_jsx(LimitSettingsModal,{onClose:closeLimitSettings,wallet:wallet})]})]});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","axios","QRCodeSVG","SendMoneyForm","QRScanner","LimitSettingsModal","getStoredWallet","storeWallet","getStoredTransactions","jsx","_jsx","jsxs","_jsxs","Dashboard","wallet","setWallet","loading","setLoading","error","setError","qrCode","setQrCode","showQR","setShowQR","showSendForm","setShowSendForm","showScanner","setShowScanner","showLimitSettings","setShowLimitSettings","recipientAddress","setRecipientAddress","isOffline","setIsOffline","navigator","onLine","stats","setStats","totalSent","totalReceived","transactionCount","handleOnline","handleOffline","window","addEventListener","removeEventListener","transactions","sent","received","count","forEach","transaction","senderWalletAddress","walletAddress","parseFloat","amount","receiverWalletAddress","getWallet","res","get","walletData","data","storedWallet","mergedWallet","dailyLimit","monthlyLimit","enableLimits","err","console","generateQRCode","Error","JSON","stringify","payId","type","closeQR","openSendForm","closeSendForm","openScanner","mediaDevices","getUserMedia","closeScanner","openLimitSettings","closeLimitSettings","updatedWallet","handleScanSuccess","handleTransactionSuccess","className","children","onClick","title","balance","disabled","toFixed","src","alt","style","maxWidth","width","value","size","level","includeMargin","bgColor","fgColor","onClose","onSuccess","initialRecipientAddress","onScanSuccess"],"sources":["C:/Users/user/Documents/pay/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { QRCodeSVG } from 'qrcode.react';\r\nimport SendMoneyForm from '../components/wallet/SendMoneyForm';\r\nimport QRScanner from '../components/wallet/QRScanner';\r\nimport LimitSettingsModal from '../components/wallet/LimitSettingsModal';\r\nimport { getStoredWallet, storeWallet, getStoredTransactions } from '../utils/localStorage';\r\n\r\nconst Dashboard = () => {\r\n  const [wallet, setWallet] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [qrCode, setQrCode] = useState(null);\r\n  const [showQR, setShowQR] = useState(false);\r\n  const [showSendForm, setShowSendForm] = useState(false);\r\n  const [showScanner, setShowScanner] = useState(false);\r\n  const [showLimitSettings, setShowLimitSettings] = useState(false);\r\n  const [recipientAddress, setRecipientAddress] = useState('');\r\n  const [isOffline, setIsOffline] = useState(!navigator.onLine);\r\n  const [stats, setStats] = useState({\r\n    totalSent: 0,\r\n    totalReceived: 0,\r\n    transactionCount: 0\r\n  });\r\n\r\n  // Check online status\r\n  useEffect(() => {\r\n    const handleOnline = () => setIsOffline(false);\r\n    const handleOffline = () => setIsOffline(true);\r\n\r\n    window.addEventListener('online', handleOnline);\r\n    window.addEventListener('offline', handleOffline);\r\n\r\n    return () => {\r\n      window.removeEventListener('online', handleOnline);\r\n      window.removeEventListener('offline', handleOffline);\r\n    };\r\n  }, []);\r\n\r\n  // Calculate wallet statistics\r\n  useEffect(() => {\r\n    if (wallet) {\r\n      const transactions = getStoredTransactions();\r\n      let sent = 0;\r\n      let received = 0;\r\n      let count = 0;\r\n      \r\n      transactions.forEach(transaction => {\r\n        if (transaction.senderWalletAddress === wallet.walletAddress) {\r\n          sent += parseFloat(transaction.amount);\r\n          count++;\r\n        }\r\n        if (transaction.receiverWalletAddress === wallet.walletAddress) {\r\n          received += parseFloat(transaction.amount);\r\n          count++;\r\n        }\r\n      });\r\n      \r\n      setStats({\r\n        totalSent: sent,\r\n        totalReceived: received,\r\n        transactionCount: count\r\n      });\r\n    }\r\n  }, [wallet]);\r\n\r\n  useEffect(() => {\r\n    const getWallet = async () => {\r\n      try {\r\n        // Try to get wallet from API if online\r\n        if (navigator.onLine) {\r\n          const res = await axios.get('/api/wallets');\r\n          const walletData = res.data;\r\n          \r\n          // Keep local settings like limits\r\n          const storedWallet = getStoredWallet();\r\n          const mergedWallet = {\r\n            ...walletData,\r\n            dailyLimit: storedWallet?.dailyLimit || 0,\r\n            monthlyLimit: storedWallet?.monthlyLimit || 0,\r\n            enableLimits: storedWallet?.enableLimits || false\r\n          };\r\n          \r\n          setWallet(mergedWallet);\r\n          storeWallet(mergedWallet); // Save to localStorage\r\n        } else {\r\n          // Use localStorage data when offline\r\n          const storedWallet = getStoredWallet();\r\n          if (storedWallet) {\r\n            setWallet(storedWallet);\r\n          } else {\r\n            setError('No wallet data available offline');\r\n          }\r\n        }\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Error loading wallet:', err);\r\n        \r\n        // Try localStorage as fallback\r\n        const storedWallet = getStoredWallet();\r\n        if (storedWallet) {\r\n          setWallet(storedWallet);\r\n        } else {\r\n          setError('Failed to load wallet data');\r\n        }\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    getWallet();\r\n  }, []);\r\n\r\n  const generateQRCode = async () => {\r\n    try {\r\n      setError('');\r\n      setShowQR(true);\r\n      \r\n      if (navigator.onLine) {\r\n        const res = await axios.get('/api/wallets/generate-qr');\r\n        if (res.data && res.data.qrCode) {\r\n          setQrCode(res.data.qrCode);\r\n        } else {\r\n          throw new Error('Invalid QR code data received');\r\n        }\r\n      } else {\r\n        // For offline mode, we'll generate a QR code with wallet data\r\n        const walletData = JSON.stringify({\r\n          walletAddress: wallet.walletAddress,\r\n          payId: wallet.payId,\r\n          type: 'PAY_WALLET'\r\n        });\r\n        setQrCode(walletData);\r\n      }\r\n    } catch (err) {\r\n      console.error('QR Code generation error:', err);\r\n      setError('Failed to generate QR code. Please try again.');\r\n      setQrCode(null);\r\n    }\r\n  };\r\n\r\n  const closeQR = () => {\r\n    setShowQR(false);\r\n  };\r\n\r\n  const openSendForm = () => {\r\n    setShowSendForm(true);\r\n    setShowScanner(false);\r\n    setShowQR(false);\r\n  };\r\n\r\n  const closeSendForm = () => {\r\n    setShowSendForm(false);\r\n    setRecipientAddress('');\r\n  };\r\n\r\n  const openScanner = () => {\r\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n      setShowScanner(true);\r\n      setShowSendForm(false);\r\n      setShowQR(false);\r\n    } else {\r\n      setError('Camera access not available on your device');\r\n    }\r\n  };\r\n\r\n  const closeScanner = () => {\r\n    setShowScanner(false);\r\n  };\r\n\r\n  const openLimitSettings = () => {\r\n    setShowLimitSettings(true);\r\n  };\r\n\r\n  const closeLimitSettings = (updatedWallet) => {\r\n    if (updatedWallet) {\r\n      setWallet(updatedWallet);\r\n    }\r\n    setShowLimitSettings(false);\r\n  };\r\n\r\n  const handleScanSuccess = (data) => {\r\n    setRecipientAddress(data);\r\n    setShowScanner(false);\r\n    setShowSendForm(true);\r\n  };\r\n\r\n  const handleTransactionSuccess = async (updatedWallet) => {\r\n    if (updatedWallet) {\r\n      // If we got an updated wallet directly (offline mode)\r\n      setWallet(updatedWallet);\r\n      storeWallet(updatedWallet);\r\n    } else if (navigator.onLine) {\r\n      // If online, fetch the latest wallet\r\n      try {\r\n        const res = await axios.get('/api/wallets');\r\n        \r\n        // Merge with local settings\r\n        const mergedWallet = {\r\n          ...res.data,\r\n          dailyLimit: wallet.dailyLimit,\r\n          monthlyLimit: wallet.monthlyLimit,\r\n          enableLimits: wallet.enableLimits\r\n        };\r\n        \r\n        setWallet(mergedWallet);\r\n        storeWallet(mergedWallet);\r\n      } catch (err) {\r\n        setError('Failed to refresh wallet data');\r\n      }\r\n    }\r\n    \r\n    setShowSendForm(false);\r\n    setRecipientAddress('');\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading-container\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Loading wallet data...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"alert alert-danger\">{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center my-4\">Dashboard</h1>\r\n      \r\n      {error && (\r\n        <div className=\"alert alert-danger\">\r\n          <i className=\"fas fa-exclamation-circle\"></i> {error}\r\n        </div>\r\n      )}\r\n      \r\n      {isOffline && (\r\n        <div className=\"alert alert-warning\">\r\n          <i className=\"fas fa-wifi-slash\"></i> You are currently offline. Some features may be limited.\r\n        </div>\r\n      )}\r\n      \r\n      {wallet && (\r\n        <div className=\"wallet-card\">\r\n          <div className=\"wallet-header\">\r\n            <h2>Your PAY Account</h2>\r\n            <button \r\n              className=\"btn btn-light btn-sm\" \r\n              onClick={openLimitSettings}\r\n              title=\"Set spending limits\"\r\n            >\r\n              <i className=\"fas fa-sliders-h\"></i>\r\n            </button>\r\n          </div>\r\n          \r\n          {wallet.payId && (\r\n            <div className=\"pay-id-container\">\r\n              <h3 className=\"pay-id-heading\">Your PAY ID: <span className=\"pay-id\">{wallet.payId}</span></h3>\r\n              <p className=\"pay-id-info\">Share this 4-digit ID to easily receive money</p>\r\n            </div>\r\n          )}\r\n          \r\n          <div>\r\n            <p>Account ID:</p>\r\n            <div className=\"wallet-address\">{wallet.walletAddress}</div>\r\n          </div>\r\n          <div className=\"wallet-balance\">\r\n            Balance: {wallet.balance} PAY\r\n          </div>\r\n          \r\n          {wallet.enableLimits && (\r\n            <div className=\"limits-info\">\r\n              {wallet.dailyLimit > 0 && (\r\n                <div className=\"limit-item\">\r\n                  <i className=\"fas fa-calendar-day\"></i> Daily Limit: {wallet.dailyLimit} PAY\r\n                </div>\r\n              )}\r\n              {wallet.monthlyLimit > 0 && (\r\n                <div className=\"limit-item\">\r\n                  <i className=\"fas fa-calendar-alt\"></i> Monthly Limit: {wallet.monthlyLimit} PAY\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n          \r\n          <div className=\"wallet-controls\">\r\n            <button className=\"btn btn-primary\" onClick={generateQRCode}>\r\n              <i className=\"fas fa-qrcode\"></i> Generate QR Code\r\n            </button>\r\n            <button className=\"btn btn-secondary\" onClick={openSendForm}>\r\n              <i className=\"fas fa-paper-plane\"></i> Send Money\r\n            </button>\r\n            <button \r\n              className=\"btn btn-dark\" \r\n              onClick={openScanner}\r\n              disabled={isOffline}\r\n            >\r\n              <i className=\"fas fa-camera\"></i> Scan QR Code\r\n            </button>\r\n          </div>\r\n\r\n          {/* Stats Grid */}\r\n          <div className=\"stats-grid\">\r\n            <div className=\"stats-card\">\r\n              <div className=\"feature-icon\">\r\n                <i className=\"fas fa-arrow-up\"></i>\r\n              </div>\r\n              <h3>Sent</h3>\r\n              <p>{stats.totalSent.toFixed(2)} PAY</p>\r\n            </div>\r\n            \r\n            <div className=\"stats-card\">\r\n              <div className=\"feature-icon\">\r\n                <i className=\"fas fa-arrow-down\"></i>\r\n              </div>\r\n              <h3>Received</h3>\r\n              <p>{stats.totalReceived.toFixed(2)} PAY</p>\r\n            </div>\r\n            \r\n            <div className=\"stats-card\">\r\n              <div className=\"feature-icon\">\r\n                <i className=\"fas fa-exchange-alt\"></i>\r\n              </div>\r\n              <h3>Transactions</h3>\r\n              <p>{stats.transactionCount}</p>\r\n            </div>\r\n          </div>\r\n\r\n          {showQR && (\r\n            <div className=\"qr-container\">\r\n              <h3>Your PAY Account QR Code</h3>\r\n              <p>Scan this code to receive money</p>\r\n              {qrCode ? (\r\n                navigator.onLine ? (\r\n                  <img \r\n                    src={qrCode} \r\n                    alt=\"PAY QR Code\"\r\n                    style={{ maxWidth: '100%', width: '250px' }}\r\n                  />\r\n                ) : (\r\n                  <QRCodeSVG \r\n                    value={qrCode}\r\n                    size={250}\r\n                    level=\"H\"\r\n                    includeMargin={true}\r\n                    bgColor=\"#ffffff\"\r\n                    fgColor=\"#000000\"\r\n                  />\r\n                )\r\n              ) : (\r\n                <div className=\"alert alert-danger\">\r\n                  <i className=\"fas fa-exclamation-circle\"></i> Failed to generate QR code\r\n                </div>\r\n              )}\r\n              <button className=\"btn btn-light mt-3\" onClick={() => {\r\n                setShowQR(false);\r\n                setQrCode(null);\r\n              }}>\r\n                Close\r\n              </button>\r\n            </div>\r\n          )}\r\n\r\n          {showSendForm && (\r\n            <SendMoneyForm \r\n              onClose={closeSendForm} \r\n              onSuccess={handleTransactionSuccess} \r\n              initialRecipientAddress={recipientAddress} \r\n              wallet={wallet}\r\n              isOffline={isOffline}\r\n            />\r\n          )}\r\n\r\n          {showScanner && (\r\n            <QRScanner \r\n              onClose={closeScanner} \r\n              onScanSuccess={handleScanSuccess} \r\n            />\r\n          )}\r\n          \r\n          {showLimitSettings && (\r\n            <LimitSettingsModal\r\n              onClose={closeLimitSettings}\r\n              wallet={wallet}\r\n            />\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}