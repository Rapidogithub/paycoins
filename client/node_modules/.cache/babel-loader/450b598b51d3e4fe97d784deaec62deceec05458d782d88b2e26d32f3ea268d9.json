{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\pay\\\\client\\\\src\\\\components\\\\wallet\\\\QRScanner.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Html5QrcodeScanner } from 'html5-qrcode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRScanner = ({\n  onClose,\n  onScanSuccess\n}) => {\n  _s();\n  const [scanResult, setScanResult] = useState(null);\n  const [hasFlash, setHasFlash] = useState(false);\n  const [isFlashOn, setIsFlashOn] = useState(false);\n  const [cameras, setCameras] = useState([]);\n  const [selectedCamera, setSelectedCamera] = useState(null);\n  const [scanner, setScanner] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Check for flash/torch capability\n    if (navigator.mediaDevices && navigator.mediaDevices.getSupportedConstraints) {\n      const constraints = navigator.mediaDevices.getSupportedConstraints();\n      setHasFlash(constraints.torch || false);\n    }\n\n    // Get available cameras\n    Html5QrcodeScanner.getCameras().then(devices => {\n      setCameras(devices);\n      if (devices.length > 0) {\n        setSelectedCamera(devices[0].id);\n      }\n    }).catch(err => {\n      console.error('Error getting cameras:', err);\n      setError('Could not access camera. Please ensure camera permissions are granted.');\n    });\n\n    // Calculate optimal QR box size - responsive\n    const screenWidth = window.innerWidth;\n    const qrBoxSize = Math.min(screenWidth * 0.7, 250);\n\n    // Create scanner instance with improved mobile config\n    const newScanner = new Html5QrcodeScanner('reader', {\n      qrbox: {\n        width: qrBoxSize,\n        height: qrBoxSize\n      },\n      fps: 10,\n      rememberLastUsedCamera: true,\n      aspectRatio: 1.0,\n      disableFlip: false,\n      // Allow user to flip image if needed\n      showTorchButtonIfSupported: false,\n      // We'll use our own button\n      supportedScanTypes: [Html5QrcodeScanner.SCAN_TYPE_CAMERA, Html5QrcodeScanner.SCAN_TYPE_FILE],\n      formatsToSupport: [Html5QrcodeScanner.FORMAT_QR_CODE, Html5QrcodeScanner.FORMAT_DATA_MATRIX]\n    });\n    setScanner(newScanner);\n\n    // Success callback with vibration\n    const onScannerSuccess = (decodedText, decodedResult) => {\n      // Vibrate if supported\n      if (navigator.vibrate) {\n        navigator.vibrate(200);\n      }\n\n      // Play success sound\n      try {\n        const audio = new Audio('/scan-success.mp3');\n        audio.play().catch(e => console.log('Audio play failed:', e));\n      } catch (e) {\n        console.log('Audio not supported');\n      }\n\n      // Stop scanner\n      newScanner.clear();\n      setScanResult(decodedText);\n\n      // Call parent's success callback\n      if (onScanSuccess) {\n        try {\n          let parsedData = decodedText;\n          // Try to parse as JSON if it looks like JSON\n          if (decodedText.startsWith('{') && decodedText.endsWith('}')) {\n            try {\n              parsedData = JSON.parse(decodedText);\n              // Use wallet address if available\n              if (parsedData.walletAddress) {\n                parsedData = parsedData.walletAddress;\n              }\n            } catch (e) {\n              console.log('Not valid JSON, using as is');\n            }\n          }\n          onScanSuccess(parsedData);\n        } catch (err) {\n          console.error('Error handling scan data:', err);\n          setError('Invalid QR code format. Please try again.');\n        }\n      }\n    };\n\n    // Error callback\n    const onScannerError = err => {\n      console.warn(err);\n      if (err.includes('permissions')) {\n        setError('Camera access denied. Please check permissions.');\n      }\n    };\n\n    // Render scanner with a small delay to ensure DOM is ready\n    setTimeout(() => {\n      try {\n        newScanner.render(onScannerSuccess, onScannerError);\n      } catch (err) {\n        console.error('Error rendering scanner:', err);\n        setError('Failed to initialize camera. Please try again.');\n      }\n    }, 100);\n\n    // Handle window resize for responsive qrbox\n    const handleResize = () => {\n      if (newScanner) {\n        newScanner.clear();\n        setTimeout(() => {\n          newScanner.render(onScannerSuccess, onScannerError);\n        }, 100);\n      }\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup function\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (newScanner) {\n        try {\n          newScanner.clear();\n        } catch (e) {\n          console.log('Error clearing scanner:', e);\n        }\n      }\n    };\n  }, [onScanSuccess]);\n\n  // Toggle flash/torch\n  const toggleFlash = async () => {\n    try {\n      if (scanner && scanner.getHtml5QrcodeScanner()) {\n        const html5QrCode = scanner.getHtml5QrcodeScanner().getHtml5QrCode();\n        if (html5QrCode) {\n          await html5QrCode.applyVideoConstraints({\n            advanced: [{\n              torch: !isFlashOn\n            }]\n          });\n          setIsFlashOn(!isFlashOn);\n        }\n      }\n    } catch (err) {\n      console.error('Error toggling flash:', err);\n      // Don't show error to user, just silently fail\n    }\n  };\n\n  // Switch camera\n  const switchCamera = async cameraId => {\n    try {\n      if (scanner && scanner.getHtml5QrcodeScanner()) {\n        const html5QrCode = scanner.getHtml5QrcodeScanner().getHtml5QrCode();\n        if (html5QrCode) {\n          await html5QrCode.stop();\n          await html5QrCode.start({\n            deviceId: {\n              exact: cameraId\n            }\n          }, {\n            fps: 10,\n            qrbox: 250\n          }, decodedText => {\n            scanner.getHtml5QrcodeScanner().onScanSuccess(decodedText);\n          }, errorMessage => {\n            scanner.getHtml5QrcodeScanner().onScanError(errorMessage);\n          });\n          setSelectedCamera(cameraId);\n        }\n      }\n    } catch (err) {\n      console.error('Error switching camera:', err);\n      setError('Unable to switch camera. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"qr-scanner my-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scanner-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), \" Scan QR Code\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scanner-controls\",\n        children: [hasFlash && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn btn-icon ${isFlashOn ? 'btn-warning' : 'btn-light'}`,\n          onClick: toggleFlash,\n          title: \"Toggle Flash\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: `fas fa-bolt`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), cameras.length > 1 && /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"camera-select form-control\",\n          value: selectedCamera || '',\n          onChange: e => switchCamera(e.target.value),\n          children: cameras.map(camera => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: camera.id,\n            children: camera.label || `Camera ${camera.id.slice(0, 4)}`\n          }, camera.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"scanner-instructions\",\n      children: \"Point your camera at a wallet QR code to scan it\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-exclamation-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this), \" \", error, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-sm btn-light mt-2\",\n        onClick: () => setError(null),\n        children: \"Dismiss\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }, this), scanResult ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scan-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-check-circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Scan successful!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), \" Address detected.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: onClose,\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scan-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"reader\",\n        className: \"reader-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-light mt-3\",\n        onClick: onClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n};\n_s(QRScanner, \"OrMic13plrLKsZmPDK3WZutG44s=\");\n_c = QRScanner;\nexport default QRScanner;\nvar _c;\n$RefreshReg$(_c, \"QRScanner\");","map":{"version":3,"names":["React","useState","useEffect","Html5QrcodeScanner","jsxDEV","_jsxDEV","QRScanner","onClose","onScanSuccess","_s","scanResult","setScanResult","hasFlash","setHasFlash","isFlashOn","setIsFlashOn","cameras","setCameras","selectedCamera","setSelectedCamera","scanner","setScanner","error","setError","navigator","mediaDevices","getSupportedConstraints","constraints","torch","getCameras","then","devices","length","id","catch","err","console","screenWidth","window","innerWidth","qrBoxSize","Math","min","newScanner","qrbox","width","height","fps","rememberLastUsedCamera","aspectRatio","disableFlip","showTorchButtonIfSupported","supportedScanTypes","SCAN_TYPE_CAMERA","SCAN_TYPE_FILE","formatsToSupport","FORMAT_QR_CODE","FORMAT_DATA_MATRIX","onScannerSuccess","decodedText","decodedResult","vibrate","audio","Audio","play","e","log","clear","parsedData","startsWith","endsWith","JSON","parse","walletAddress","onScannerError","warn","includes","setTimeout","render","handleResize","addEventListener","removeEventListener","toggleFlash","getHtml5QrcodeScanner","html5QrCode","getHtml5QrCode","applyVideoConstraints","advanced","switchCamera","cameraId","stop","start","deviceId","exact","errorMessage","onScanError","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","value","onChange","target","map","camera","label","slice","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/pay/client/src/components/wallet/QRScanner.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Html5QrcodeScanner } from 'html5-qrcode';\r\n\r\nconst QRScanner = ({ onClose, onScanSuccess }) => {\r\n  const [scanResult, setScanResult] = useState(null);\r\n  const [hasFlash, setHasFlash] = useState(false);\r\n  const [isFlashOn, setIsFlashOn] = useState(false);\r\n  const [cameras, setCameras] = useState([]);\r\n  const [selectedCamera, setSelectedCamera] = useState(null);\r\n  const [scanner, setScanner] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Check for flash/torch capability\r\n    if (navigator.mediaDevices && navigator.mediaDevices.getSupportedConstraints) {\r\n      const constraints = navigator.mediaDevices.getSupportedConstraints();\r\n      setHasFlash(constraints.torch || false);\r\n    }\r\n\r\n    // Get available cameras\r\n    Html5QrcodeScanner.getCameras()\r\n      .then(devices => {\r\n        setCameras(devices);\r\n        if (devices.length > 0) {\r\n          setSelectedCamera(devices[0].id);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.error('Error getting cameras:', err);\r\n        setError('Could not access camera. Please ensure camera permissions are granted.');\r\n      });\r\n\r\n    // Calculate optimal QR box size - responsive\r\n    const screenWidth = window.innerWidth;\r\n    const qrBoxSize = Math.min(screenWidth * 0.7, 250);\r\n\r\n    // Create scanner instance with improved mobile config\r\n    const newScanner = new Html5QrcodeScanner('reader', {\r\n      qrbox: {\r\n        width: qrBoxSize,\r\n        height: qrBoxSize\r\n      },\r\n      fps: 10,\r\n      rememberLastUsedCamera: true,\r\n      aspectRatio: 1.0,\r\n      disableFlip: false, // Allow user to flip image if needed\r\n      showTorchButtonIfSupported: false, // We'll use our own button\r\n      supportedScanTypes: [\r\n        Html5QrcodeScanner.SCAN_TYPE_CAMERA, \r\n        Html5QrcodeScanner.SCAN_TYPE_FILE\r\n      ],\r\n      formatsToSupport: [\r\n        Html5QrcodeScanner.FORMAT_QR_CODE,\r\n        Html5QrcodeScanner.FORMAT_DATA_MATRIX\r\n      ]\r\n    });\r\n\r\n    setScanner(newScanner);\r\n\r\n    // Success callback with vibration\r\n    const onScannerSuccess = (decodedText, decodedResult) => {\r\n      // Vibrate if supported\r\n      if (navigator.vibrate) {\r\n        navigator.vibrate(200);\r\n      }\r\n\r\n      // Play success sound\r\n      try {\r\n        const audio = new Audio('/scan-success.mp3');\r\n        audio.play().catch(e => console.log('Audio play failed:', e));\r\n      } catch (e) {\r\n        console.log('Audio not supported');\r\n      }\r\n\r\n      // Stop scanner\r\n      newScanner.clear();\r\n      setScanResult(decodedText);\r\n      \r\n      // Call parent's success callback\r\n      if (onScanSuccess) {\r\n        try {\r\n          let parsedData = decodedText;\r\n          // Try to parse as JSON if it looks like JSON\r\n          if (decodedText.startsWith('{') && decodedText.endsWith('}')) {\r\n            try {\r\n              parsedData = JSON.parse(decodedText);\r\n              // Use wallet address if available\r\n              if (parsedData.walletAddress) {\r\n                parsedData = parsedData.walletAddress;\r\n              }\r\n            } catch (e) {\r\n              console.log('Not valid JSON, using as is');\r\n            }\r\n          }\r\n          onScanSuccess(parsedData);\r\n        } catch (err) {\r\n          console.error('Error handling scan data:', err);\r\n          setError('Invalid QR code format. Please try again.');\r\n        }\r\n      }\r\n    };\r\n\r\n    // Error callback\r\n    const onScannerError = (err) => {\r\n      console.warn(err);\r\n      if (err.includes('permissions')) {\r\n        setError('Camera access denied. Please check permissions.');\r\n      }\r\n    };\r\n\r\n    // Render scanner with a small delay to ensure DOM is ready\r\n    setTimeout(() => {\r\n      try {\r\n        newScanner.render(onScannerSuccess, onScannerError);\r\n      } catch (err) {\r\n        console.error('Error rendering scanner:', err);\r\n        setError('Failed to initialize camera. Please try again.');\r\n      }\r\n    }, 100);\r\n\r\n    // Handle window resize for responsive qrbox\r\n    const handleResize = () => {\r\n      if (newScanner) {\r\n        newScanner.clear();\r\n        setTimeout(() => {\r\n          newScanner.render(onScannerSuccess, onScannerError);\r\n        }, 100);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    // Cleanup function\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      if (newScanner) {\r\n        try {\r\n          newScanner.clear();\r\n        } catch (e) {\r\n          console.log('Error clearing scanner:', e);\r\n        }\r\n      }\r\n    };\r\n  }, [onScanSuccess]);\r\n\r\n  // Toggle flash/torch\r\n  const toggleFlash = async () => {\r\n    try {\r\n      if (scanner && scanner.getHtml5QrcodeScanner()) {\r\n        const html5QrCode = scanner.getHtml5QrcodeScanner().getHtml5QrCode();\r\n        if (html5QrCode) {\r\n          await html5QrCode.applyVideoConstraints({\r\n            advanced: [{ torch: !isFlashOn }]\r\n          });\r\n          setIsFlashOn(!isFlashOn);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error('Error toggling flash:', err);\r\n      // Don't show error to user, just silently fail\r\n    }\r\n  };\r\n\r\n  // Switch camera\r\n  const switchCamera = async (cameraId) => {\r\n    try {\r\n      if (scanner && scanner.getHtml5QrcodeScanner()) {\r\n        const html5QrCode = scanner.getHtml5QrcodeScanner().getHtml5QrCode();\r\n        if (html5QrCode) {\r\n          await html5QrCode.stop();\r\n          await html5QrCode.start(\r\n            { deviceId: { exact: cameraId } },\r\n            { fps: 10, qrbox: 250 },\r\n            (decodedText) => {\r\n              scanner.getHtml5QrcodeScanner().onScanSuccess(decodedText);\r\n            },\r\n            (errorMessage) => {\r\n              scanner.getHtml5QrcodeScanner().onScanError(errorMessage);\r\n            }\r\n          );\r\n          setSelectedCamera(cameraId);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error('Error switching camera:', err);\r\n      setError('Unable to switch camera. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"qr-scanner my-4\">\r\n      <div className=\"scanner-header\">\r\n        <h3>\r\n          <i className=\"fas fa-camera\"></i> Scan QR Code\r\n        </h3>\r\n        <div className=\"scanner-controls\">\r\n          {hasFlash && (\r\n            <button \r\n              className={`btn btn-icon ${isFlashOn ? 'btn-warning' : 'btn-light'}`}\r\n              onClick={toggleFlash}\r\n              title=\"Toggle Flash\"\r\n            >\r\n              <i className={`fas fa-bolt`}></i>\r\n            </button>\r\n          )}\r\n          {cameras.length > 1 && (\r\n            <select \r\n              className=\"camera-select form-control\"\r\n              value={selectedCamera || ''}\r\n              onChange={(e) => switchCamera(e.target.value)}\r\n            >\r\n              {cameras.map(camera => (\r\n                <option key={camera.id} value={camera.id}>\r\n                  {camera.label || `Camera ${camera.id.slice(0, 4)}`}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          )}\r\n        </div>\r\n      </div>\r\n      \r\n      <p className=\"scanner-instructions\">\r\n        Point your camera at a wallet QR code to scan it\r\n      </p>\r\n      \r\n      {error && (\r\n        <div className=\"alert alert-danger\">\r\n          <i className=\"fas fa-exclamation-circle\"></i> {error}\r\n          <button \r\n            className=\"btn btn-sm btn-light mt-2\"\r\n            onClick={() => setError(null)}\r\n          >\r\n            Dismiss\r\n          </button>\r\n        </div>\r\n      )}\r\n      \r\n      {scanResult ? (\r\n        <div className=\"scan-result\">\r\n          <div className=\"alert alert-success\">\r\n            <i className=\"fas fa-check-circle\"></i>\r\n            <strong>Scan successful!</strong> Address detected.\r\n          </div>\r\n          <button \r\n            className=\"btn btn-primary\"\r\n            onClick={onClose}\r\n          >\r\n            Continue\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"scan-container\">\r\n          <div id=\"reader\" className=\"reader-container\"></div>\r\n          <button \r\n            className=\"btn btn-light mt-3\"\r\n            onClick={onClose}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRScanner; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}