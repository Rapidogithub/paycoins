{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\pay\\\\client\\\\src\\\\components\\\\wallet\\\\QRScanner.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Html5QrcodeScanner } from 'html5-qrcode';\n\n// Simplified scanner with focus on reliability\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRScanner = ({\n  onClose,\n  onScanSuccess,\n  onError\n}) => {\n  _s();\n  const [scanResult, setScanResult] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Set reasonable delay before initializing\n    const initTimer = setTimeout(() => {\n      try {\n        initializeQrScanner();\n      } catch (err) {\n        console.error(\"Critical init error:\", err);\n        setError(\"Failed to initialize scanner. Please try again or use a different device.\");\n        setLoading(false);\n      }\n    }, 1000);\n    return () => {\n      clearTimeout(initTimer);\n      // Clean up scanner element\n      const scannerElement = document.getElementById('reader');\n      if (scannerElement) {\n        while (scannerElement.firstChild) {\n          scannerElement.removeChild(scannerElement.firstChild);\n        }\n      }\n    };\n  }, []);\n  const initializeQrScanner = () => {\n    console.log(\"Initializing scanner...\");\n    setLoading(true);\n\n    // Simple config with minimal options\n    const config = {\n      fps: 2,\n      qrbox: 250,\n      disableFlip: false,\n      showTorchButtonIfSupported: true\n    };\n    try {\n      const scanner = new Html5QrcodeScanner(\"reader\", config, /* verbose= */false);\n\n      // Define success handler\n      const onScanFinish = decodedText => {\n        console.log(\"QR code detected:\", decodedText);\n        setScanResult(decodedText);\n\n        // Try vibration feedback\n        if (navigator.vibrate) {\n          navigator.vibrate(200);\n        }\n\n        // Process data\n        try {\n          let parsedData = decodedText;\n          // Handle JSON format (for wallet addresses)\n          if (decodedText.startsWith('{') && decodedText.endsWith('}')) {\n            try {\n              const jsonData = JSON.parse(decodedText);\n              if (jsonData.walletAddress) {\n                parsedData = jsonData.walletAddress;\n              }\n            } catch (e) {\n              console.log(\"Not valid JSON, using raw text\");\n            }\n          }\n\n          // Pass to parent\n          if (onScanSuccess) {\n            onScanSuccess(parsedData);\n          }\n        } catch (err) {\n          console.error(\"Error processing scan result:\", err);\n          setError(\"Invalid QR code format\");\n        }\n      };\n\n      // Define error handler\n      const onScanError = errorMessage => {\n        console.warn(\"QR Scan error:\", errorMessage);\n        // Only show user errors when they're critical\n        if (errorMessage.includes(\"Camera access\") || errorMessage.includes(\"permission\") || errorMessage.includes(\"denied\")) {\n          setError(\"Camera access denied. Please check your permissions and try again.\");\n          if (onError) {\n            onError(\"Camera permission denied\");\n          }\n        }\n      };\n\n      // Render the scanner\n      console.log(\"Starting scanner render...\");\n      scanner.render(onScanFinish, onScanError);\n      console.log(\"Scanner render completed\");\n      setLoading(false);\n    } catch (err) {\n      console.error(\"Scanner initialization error:\", err);\n      setError(\"Failed to initialize camera. Please check your browser permissions.\");\n      setLoading(false);\n      if (onError) {\n        onError(\"Scanner initialization failed\");\n      }\n    }\n  };\n  const handleRetry = () => {\n    setError(null);\n    setLoading(true);\n\n    // Clean up existing scanner\n    const scannerElement = document.getElementById('reader');\n    if (scannerElement) {\n      while (scannerElement.firstChild) {\n        scannerElement.removeChild(scannerElement.firstChild);\n      }\n    }\n\n    // Add delay before reinitializing\n    setTimeout(() => {\n      try {\n        initializeQrScanner();\n      } catch (err) {\n        console.error(\"Retry failed:\", err);\n        setError(\"Camera initialization failed. Please try again later.\");\n        setLoading(false);\n      }\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"qr-scanner my-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scanner-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), \" Scan QR Code\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"scanner-instructions\",\n      children: \"Point your camera at a wallet QR code to scan it\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-spinner fa-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), \" Initializing camera...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-exclamation-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), \" \", error, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-sm btn-primary mr-2\",\n          onClick: handleRetry,\n          children: \"Retry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-sm btn-light\",\n          onClick: onClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this), scanResult ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scan-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-check-circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Scan successful!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), \" Address detected.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: onClose,\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scan-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"reader\",\n        className: \"reader-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this), !loading && !error && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-light mt-3\",\n        onClick: onClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n_s(QRScanner, \"3m/KB1fDEjoF9MQftAbN2gos7UY=\");\n_c = QRScanner;\nexport default QRScanner;\nvar _c;\n$RefreshReg$(_c, \"QRScanner\");","map":{"version":3,"names":["React","useState","useEffect","Html5QrcodeScanner","jsxDEV","_jsxDEV","QRScanner","onClose","onScanSuccess","onError","_s","scanResult","setScanResult","error","setError","loading","setLoading","initTimer","setTimeout","initializeQrScanner","err","console","clearTimeout","scannerElement","document","getElementById","firstChild","removeChild","log","config","fps","qrbox","disableFlip","showTorchButtonIfSupported","scanner","onScanFinish","decodedText","navigator","vibrate","parsedData","startsWith","endsWith","jsonData","JSON","parse","walletAddress","e","onScanError","errorMessage","warn","includes","render","handleRetry","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/pay/client/src/components/wallet/QRScanner.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Html5QrcodeScanner } from 'html5-qrcode';\r\n\r\n// Simplified scanner with focus on reliability\r\nconst QRScanner = ({ onClose, onScanSuccess, onError }) => {\r\n  const [scanResult, setScanResult] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  \r\n  useEffect(() => {\r\n    // Set reasonable delay before initializing\r\n    const initTimer = setTimeout(() => {\r\n      try {\r\n        initializeQrScanner();\r\n      } catch (err) {\r\n        console.error(\"Critical init error:\", err);\r\n        setError(\"Failed to initialize scanner. Please try again or use a different device.\");\r\n        setLoading(false);\r\n      }\r\n    }, 1000);\r\n    \r\n    return () => {\r\n      clearTimeout(initTimer);\r\n      // Clean up scanner element\r\n      const scannerElement = document.getElementById('reader');\r\n      if (scannerElement) {\r\n        while (scannerElement.firstChild) {\r\n          scannerElement.removeChild(scannerElement.firstChild);\r\n        }\r\n      }\r\n    };\r\n  }, []);\r\n  \r\n  const initializeQrScanner = () => {\r\n    console.log(\"Initializing scanner...\");\r\n    setLoading(true);\r\n    \r\n    // Simple config with minimal options\r\n    const config = {\r\n      fps: 2,\r\n      qrbox: 250,\r\n      disableFlip: false,\r\n      showTorchButtonIfSupported: true\r\n    };\r\n    \r\n    try {\r\n      const scanner = new Html5QrcodeScanner(\r\n        \"reader\",\r\n        config,\r\n        /* verbose= */ false\r\n      );\r\n      \r\n      // Define success handler\r\n      const onScanFinish = (decodedText) => {\r\n        console.log(\"QR code detected:\", decodedText);\r\n        setScanResult(decodedText);\r\n        \r\n        // Try vibration feedback\r\n        if (navigator.vibrate) {\r\n          navigator.vibrate(200);\r\n        }\r\n        \r\n        // Process data\r\n          try {\r\n            let parsedData = decodedText;\r\n          // Handle JSON format (for wallet addresses)\r\n            if (decodedText.startsWith('{') && decodedText.endsWith('}')) {\r\n              try {\r\n              const jsonData = JSON.parse(decodedText);\r\n              if (jsonData.walletAddress) {\r\n                parsedData = jsonData.walletAddress;\r\n                }\r\n              } catch (e) {\r\n              console.log(\"Not valid JSON, using raw text\");\r\n            }\r\n          }\r\n          \r\n          // Pass to parent\r\n          if (onScanSuccess) {\r\n            onScanSuccess(parsedData);\r\n          }\r\n        } catch (err) {\r\n          console.error(\"Error processing scan result:\", err);\r\n          setError(\"Invalid QR code format\");\r\n        }\r\n      };\r\n      \r\n      // Define error handler\r\n      const onScanError = (errorMessage) => {\r\n        console.warn(\"QR Scan error:\", errorMessage);\r\n        // Only show user errors when they're critical\r\n        if (\r\n          errorMessage.includes(\"Camera access\") ||\r\n          errorMessage.includes(\"permission\") ||\r\n          errorMessage.includes(\"denied\")\r\n        ) {\r\n          setError(\"Camera access denied. Please check your permissions and try again.\");\r\n          if (onError) {\r\n            onError(\"Camera permission denied\");\r\n          }\r\n        }\r\n      };\r\n      \r\n      // Render the scanner\r\n      console.log(\"Starting scanner render...\");\r\n      scanner.render(onScanFinish, onScanError);\r\n      console.log(\"Scanner render completed\");\r\n      setLoading(false);\r\n\r\n    } catch (err) {\r\n      console.error(\"Scanner initialization error:\", err);\r\n      setError(\"Failed to initialize camera. Please check your browser permissions.\");\r\n      setLoading(false);\r\n          if (onError) {\r\n        onError(\"Scanner initialization failed\");\r\n      }\r\n    }\r\n  };\r\n  \r\n  const handleRetry = () => {\r\n    setError(null);\r\n    setLoading(true);\r\n    \r\n    // Clean up existing scanner\r\n    const scannerElement = document.getElementById('reader');\r\n    if (scannerElement) {\r\n      while (scannerElement.firstChild) {\r\n        scannerElement.removeChild(scannerElement.firstChild);\r\n      }\r\n    }\r\n    \r\n    // Add delay before reinitializing\r\n    setTimeout(() => {\r\n      try {\r\n        initializeQrScanner();\r\n      } catch (err) {\r\n        console.error(\"Retry failed:\", err);\r\n        setError(\"Camera initialization failed. Please try again later.\");\r\n        setLoading(false);\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"qr-scanner my-4\">\r\n      <div className=\"scanner-header\">\r\n        <h3>\r\n          <i className=\"fas fa-camera\"></i> Scan QR Code\r\n        </h3>\r\n      </div>\r\n      \r\n      <p className=\"scanner-instructions\">\r\n        Point your camera at a wallet QR code to scan it\r\n      </p>\r\n      \r\n      {loading && (\r\n        <div className=\"alert alert-info\">\r\n          <i className=\"fas fa-spinner fa-spin\"></i> Initializing camera...\r\n        </div>\r\n      )}\r\n      \r\n      {error && (\r\n        <div className=\"alert alert-danger\">\r\n          <i className=\"fas fa-exclamation-circle\"></i> {error}\r\n          <div className=\"mt-2\">\r\n            <button \r\n              className=\"btn btn-sm btn-primary mr-2\"\r\n              onClick={handleRetry}\r\n            >\r\n              Retry\r\n            </button>\r\n            <button \r\n              className=\"btn btn-sm btn-light\"\r\n              onClick={onClose}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {scanResult ? (\r\n        <div className=\"scan-result\">\r\n          <div className=\"alert alert-success\">\r\n            <i className=\"fas fa-check-circle\"></i>\r\n            <strong>Scan successful!</strong> Address detected.\r\n          </div>\r\n          <button \r\n            className=\"btn btn-primary\"\r\n            onClick={onClose}\r\n          >\r\n            Continue\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"scan-container\">\r\n          <div id=\"reader\" className=\"reader-container\"></div>\r\n          {!loading && !error && (\r\n          <button \r\n            className=\"btn btn-light mt-3\"\r\n            onClick={onClose}\r\n          >\r\n            Cancel\r\n          </button>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRScanner; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}