{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\pay\\\\client\\\\src\\\\components\\\\wallet\\\\SendMoneyForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { getStoredWallet, storeWallet, getStoredTransactions, storeTransactions } from '../../utils/localStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SendMoneyForm = ({\n  onClose,\n  onSuccess,\n  initialRecipientAddress = '',\n  wallet,\n  isOffline\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    receiverWalletAddress: initialRecipientAddress,\n    receiverPayId: '',\n    amount: '',\n    sendMethod: 'address' // 'address' or 'payId'\n  });\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [lookupResult, setLookupResult] = useState(null);\n  useEffect(() => {\n    setFormData({\n      ...formData,\n      receiverWalletAddress: initialRecipientAddress\n    });\n  }, [initialRecipientAddress]);\n  const {\n    receiverWalletAddress,\n    receiverPayId,\n    amount,\n    sendMethod\n  } = formData;\n  const onChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n\n    // Clear lookup result when changing input\n    if (e.target.name === 'receiverPayId' || e.target.name === 'receiverWalletAddress') {\n      setLookupResult(null);\n    }\n  };\n  const handleSendMethodChange = method => {\n    setFormData({\n      ...formData,\n      sendMethod: method\n    });\n    setLookupResult(null);\n  };\n  const lookupPayId = async () => {\n    if (!receiverPayId || receiverPayId.length !== 4) {\n      setError('Please enter a valid 4-digit PAY ID');\n      return;\n    }\n    try {\n      setLoading(true);\n      const res = await axios.get(`/api/users/find/${receiverPayId}`);\n      setLookupResult(res.data);\n      setError('');\n      setLoading(false);\n    } catch (err) {\n      setLookupResult(null);\n      setError('User with this PAY ID not found');\n      setLoading(false);\n    }\n  };\n  const handleOfflineTransaction = () => {\n    // Basic validation\n    const parsedAmount = parseFloat(amount);\n    if (sendMethod === 'address' && !receiverWalletAddress) {\n      setError('Recipient account ID is required');\n      setLoading(false);\n      return false;\n    }\n    if (sendMethod === 'payId' && !receiverPayId) {\n      setError('Recipient PAY ID is required');\n      setLoading(false);\n      return false;\n    }\n    if (!parsedAmount || parsedAmount <= 0) {\n      setError('Amount must be a positive number');\n      setLoading(false);\n      return false;\n    }\n    if (wallet.balance < parsedAmount) {\n      setError('Insufficient balance');\n      setLoading(false);\n      return false;\n    }\n\n    // Check if sending to self (only possible to check by address in offline mode)\n    if (sendMethod === 'address' && wallet.walletAddress === receiverWalletAddress) {\n      setError('Cannot send money to yourself');\n      setLoading(false);\n      return false;\n    }\n\n    // For PAY ID transfers in offline mode, we can't verify the recipient\n    if (sendMethod === 'payId') {\n      setError('PAY ID transfers are not available in offline mode');\n      setLoading(false);\n      return false;\n    }\n\n    // Create offline transaction\n    const offlineTransaction = {\n      id: `offline-${Date.now()}`,\n      senderWalletAddress: wallet.walletAddress,\n      receiverWalletAddress,\n      amount: parsedAmount,\n      date: new Date(),\n      isPending: true\n    };\n\n    // Update wallet balance locally\n    const updatedWallet = {\n      ...wallet,\n      balance: wallet.balance - parsedAmount\n    };\n\n    // Save to localStorage\n    const transactions = getStoredTransactions();\n    storeTransactions([offlineTransaction, ...transactions]);\n    storeWallet(updatedWallet);\n    return updatedWallet;\n  };\n  const onSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    setLoading(true);\n\n    // Handle offline mode\n    if (isOffline) {\n      const updatedWallet = handleOfflineTransaction();\n      if (updatedWallet) {\n        setSuccess('Transaction saved for processing when back online');\n        setLoading(false);\n\n        // Reset form\n        setFormData({\n          receiverWalletAddress: '',\n          receiverPayId: '',\n          amount: '',\n          sendMethod: 'address'\n        });\n\n        // Notify parent component\n        if (onSuccess) {\n          onSuccess(updatedWallet);\n        }\n      }\n      return;\n    }\n\n    // Online mode\n    try {\n      const transactionData = {\n        amount: parseFloat(amount)\n      };\n\n      // Add appropriate recipient identifier based on sendMethod\n      if (sendMethod === 'address') {\n        transactionData.receiverWalletAddress = receiverWalletAddress;\n      } else {\n        transactionData.receiverPayId = receiverPayId;\n      }\n      await axios.post('/api/transactions', transactionData);\n      setSuccess('Transaction completed successfully!');\n      setLoading(false);\n\n      // Reset form\n      setFormData({\n        receiverWalletAddress: '',\n        receiverPayId: '',\n        amount: '',\n        sendMethod: 'address'\n      });\n\n      // Notify parent component\n      if (onSuccess) {\n        onSuccess();\n      }\n    } catch (err) {\n      setLoading(false);\n      setError(err.response && err.response.data.msg ? err.response.data.msg : 'Transaction failed. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"send-form card my-4 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-paper-plane\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), \" Send Money\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), isOffline && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-info-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), \" You are offline. Transactions will be saved locally and processed when you're back online.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"send-method-tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-btn ${sendMethod === 'address' ? 'active' : ''}`,\n        onClick: () => handleSendMethodChange('address'),\n        children: \"Send by Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-btn ${sendMethod === 'payId' ? 'active' : ''}`,\n        onClick: () => handleSendMethodChange('payId'),\n        disabled: isOffline,\n        children: \"Send by PAY ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [sendMethod === 'address' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"receiverWalletAddress\",\n          children: \"Recipient Account Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"receiverWalletAddress\",\n          id: \"receiverWalletAddress\",\n          value: receiverWalletAddress,\n          onChange: onChange,\n          required: sendMethod === 'address',\n          disabled: sendMethod !== 'address'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"receiverPayId\",\n          children: \"Recipient PAY ID (4 digits)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pay-id-lookup-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"receiverPayId\",\n            id: \"receiverPayId\",\n            value: receiverPayId,\n            onChange: onChange,\n            pattern: \"[0-9]{4}\",\n            maxLength: \"4\",\n            required: sendMethod === 'payId',\n            disabled: sendMethod !== 'payId' || isOffline\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-sm btn-info\",\n            onClick: lookupPayId,\n            disabled: loading || !receiverPayId || receiverPayId.length !== 4,\n            children: \"Lookup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this), lookupResult && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lookup-result\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Recipient found: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: lookupResult.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          children: \"Amount (PAY)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"amount\",\n          id: \"amount\",\n          value: amount,\n          onChange: onChange,\n          step: \"0.01\",\n          min: \"0.01\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          disabled: loading,\n          children: loading ? 'Processing...' : 'Send'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-light\",\n          onClick: onClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n};\n_s(SendMoneyForm, \"fIRuHJnAVQTJwFCppnoirte7bm8=\");\n_c = SendMoneyForm;\nexport default SendMoneyForm;\nvar _c;\n$RefreshReg$(_c, \"SendMoneyForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","getStoredWallet","storeWallet","getStoredTransactions","storeTransactions","jsxDEV","_jsxDEV","SendMoneyForm","onClose","onSuccess","initialRecipientAddress","wallet","isOffline","_s","formData","setFormData","receiverWalletAddress","receiverPayId","amount","sendMethod","error","setError","success","setSuccess","loading","setLoading","lookupResult","setLookupResult","onChange","e","target","name","value","handleSendMethodChange","method","lookupPayId","length","res","get","data","err","handleOfflineTransaction","parsedAmount","parseFloat","balance","walletAddress","offlineTransaction","id","Date","now","senderWalletAddress","date","isPending","updatedWallet","transactions","onSubmit","preventDefault","transactionData","post","response","msg","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","htmlFor","type","required","pattern","maxLength","username","step","min","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/pay/client/src/components/wallet/SendMoneyForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { getStoredWallet, storeWallet, getStoredTransactions, storeTransactions } from '../../utils/localStorage';\r\n\r\nconst SendMoneyForm = ({ onClose, onSuccess, initialRecipientAddress = '', wallet, isOffline }) => {\r\n  const [formData, setFormData] = useState({\r\n    receiverWalletAddress: initialRecipientAddress,\r\n    receiverPayId: '',\r\n    amount: '',\r\n    sendMethod: 'address' // 'address' or 'payId'\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [lookupResult, setLookupResult] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setFormData({\r\n      ...formData,\r\n      receiverWalletAddress: initialRecipientAddress\r\n    });\r\n  }, [initialRecipientAddress]);\r\n\r\n  const { receiverWalletAddress, receiverPayId, amount, sendMethod } = formData;\r\n\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    \r\n    // Clear lookup result when changing input\r\n    if (e.target.name === 'receiverPayId' || e.target.name === 'receiverWalletAddress') {\r\n      setLookupResult(null);\r\n    }\r\n  };\r\n\r\n  const handleSendMethodChange = (method) => {\r\n    setFormData({\r\n      ...formData,\r\n      sendMethod: method\r\n    });\r\n    setLookupResult(null);\r\n  };\r\n\r\n  const lookupPayId = async () => {\r\n    if (!receiverPayId || receiverPayId.length !== 4) {\r\n      setError('Please enter a valid 4-digit PAY ID');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const res = await axios.get(`/api/users/find/${receiverPayId}`);\r\n      setLookupResult(res.data);\r\n      setError('');\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setLookupResult(null);\r\n      setError('User with this PAY ID not found');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleOfflineTransaction = () => {\r\n    // Basic validation\r\n    const parsedAmount = parseFloat(amount);\r\n    \r\n    if (sendMethod === 'address' && !receiverWalletAddress) {\r\n      setError('Recipient account ID is required');\r\n      setLoading(false);\r\n      return false;\r\n    }\r\n    \r\n    if (sendMethod === 'payId' && !receiverPayId) {\r\n      setError('Recipient PAY ID is required');\r\n      setLoading(false);\r\n      return false;\r\n    }\r\n    \r\n    if (!parsedAmount || parsedAmount <= 0) {\r\n      setError('Amount must be a positive number');\r\n      setLoading(false);\r\n      return false;\r\n    }\r\n    \r\n    if (wallet.balance < parsedAmount) {\r\n      setError('Insufficient balance');\r\n      setLoading(false);\r\n      return false;\r\n    }\r\n    \r\n    // Check if sending to self (only possible to check by address in offline mode)\r\n    if (sendMethod === 'address' && wallet.walletAddress === receiverWalletAddress) {\r\n      setError('Cannot send money to yourself');\r\n      setLoading(false);\r\n      return false;\r\n    }\r\n    \r\n    // For PAY ID transfers in offline mode, we can't verify the recipient\r\n    if (sendMethod === 'payId') {\r\n      setError('PAY ID transfers are not available in offline mode');\r\n      setLoading(false);\r\n      return false;\r\n    }\r\n    \r\n    // Create offline transaction\r\n    const offlineTransaction = {\r\n      id: `offline-${Date.now()}`,\r\n      senderWalletAddress: wallet.walletAddress,\r\n      receiverWalletAddress,\r\n      amount: parsedAmount,\r\n      date: new Date(),\r\n      isPending: true\r\n    };\r\n    \r\n    // Update wallet balance locally\r\n    const updatedWallet = {\r\n      ...wallet,\r\n      balance: wallet.balance - parsedAmount\r\n    };\r\n    \r\n    // Save to localStorage\r\n    const transactions = getStoredTransactions();\r\n    storeTransactions([offlineTransaction, ...transactions]);\r\n    storeWallet(updatedWallet);\r\n    \r\n    return updatedWallet;\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess('');\r\n    setLoading(true);\r\n\r\n    // Handle offline mode\r\n    if (isOffline) {\r\n      const updatedWallet = handleOfflineTransaction();\r\n      if (updatedWallet) {\r\n        setSuccess('Transaction saved for processing when back online');\r\n        setLoading(false);\r\n        \r\n        // Reset form\r\n        setFormData({\r\n          receiverWalletAddress: '',\r\n          receiverPayId: '',\r\n          amount: '',\r\n          sendMethod: 'address'\r\n        });\r\n        \r\n        // Notify parent component\r\n        if (onSuccess) {\r\n          onSuccess(updatedWallet);\r\n        }\r\n      }\r\n      return;\r\n    }\r\n\r\n    // Online mode\r\n    try {\r\n      const transactionData = {\r\n        amount: parseFloat(amount)\r\n      };\r\n      \r\n      // Add appropriate recipient identifier based on sendMethod\r\n      if (sendMethod === 'address') {\r\n        transactionData.receiverWalletAddress = receiverWalletAddress;\r\n      } else {\r\n        transactionData.receiverPayId = receiverPayId;\r\n      }\r\n      \r\n      await axios.post('/api/transactions', transactionData);\r\n\r\n      setSuccess('Transaction completed successfully!');\r\n      setLoading(false);\r\n\r\n      // Reset form\r\n      setFormData({\r\n        receiverWalletAddress: '',\r\n        receiverPayId: '',\r\n        amount: '',\r\n        sendMethod: 'address'\r\n      });\r\n\r\n      // Notify parent component\r\n      if (onSuccess) {\r\n        onSuccess();\r\n      }\r\n    } catch (err) {\r\n      setLoading(false);\r\n      setError(\r\n        err.response && err.response.data.msg\r\n          ? err.response.data.msg\r\n          : 'Transaction failed. Please try again.'\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"send-form card my-4 p-4\">\r\n      <h3>\r\n        <i className=\"fas fa-paper-plane\"></i> Send Money\r\n      </h3>\r\n      \r\n      {isOffline && (\r\n        <div className=\"alert alert-info\">\r\n          <i className=\"fas fa-info-circle\"></i> You are offline. Transactions will be saved locally and processed when you're back online.\r\n        </div>\r\n      )}\r\n      \r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n      {success && <div className=\"alert alert-success\">{success}</div>}\r\n      \r\n      <div className=\"send-method-tabs\">\r\n        <button \r\n          className={`tab-btn ${sendMethod === 'address' ? 'active' : ''}`}\r\n          onClick={() => handleSendMethodChange('address')}\r\n        >\r\n          Send by Address\r\n        </button>\r\n        <button \r\n          className={`tab-btn ${sendMethod === 'payId' ? 'active' : ''}`}\r\n          onClick={() => handleSendMethodChange('payId')}\r\n          disabled={isOffline}\r\n        >\r\n          Send by PAY ID\r\n        </button>\r\n      </div>\r\n      \r\n      <form onSubmit={onSubmit}>\r\n        {sendMethod === 'address' ? (\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"receiverWalletAddress\">Recipient Account Address</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"receiverWalletAddress\"\r\n              id=\"receiverWalletAddress\"\r\n              value={receiverWalletAddress}\r\n              onChange={onChange}\r\n              required={sendMethod === 'address'}\r\n              disabled={sendMethod !== 'address'}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"receiverPayId\">Recipient PAY ID (4 digits)</label>\r\n            <div className=\"pay-id-lookup-container\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"receiverPayId\"\r\n                id=\"receiverPayId\"\r\n                value={receiverPayId}\r\n                onChange={onChange}\r\n                pattern=\"[0-9]{4}\"\r\n                maxLength=\"4\"\r\n                required={sendMethod === 'payId'}\r\n                disabled={sendMethod !== 'payId' || isOffline}\r\n              />\r\n              <button \r\n                type=\"button\" \r\n                className=\"btn btn-sm btn-info\" \r\n                onClick={lookupPayId}\r\n                disabled={loading || !receiverPayId || receiverPayId.length !== 4}\r\n              >\r\n                Lookup\r\n              </button>\r\n            </div>\r\n            \r\n            {lookupResult && (\r\n              <div className=\"lookup-result\">\r\n                <p>Recipient found: <strong>{lookupResult.username}</strong></p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"amount\">Amount (PAY)</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"amount\"\r\n            id=\"amount\"\r\n            value={amount}\r\n            onChange={onChange}\r\n            step=\"0.01\"\r\n            min=\"0.01\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"btn-group\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary\"\r\n            disabled={loading}\r\n          >\r\n            {loading ? 'Processing...' : 'Send'}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n            onClick={onClose}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SendMoneyForm; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}