{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\pay\\\\client\\\\src\\\\components\\\\wallet\\\\SendMoneyForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { getStoredWallet, storeWallet, getStoredTransactions, storeTransactions } from '../../utils/localStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SendMoneyForm = ({\n  onClose,\n  onSuccess,\n  initialRecipientAddress = '',\n  wallet,\n  isOffline\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    receiverWalletAddress: initialRecipientAddress,\n    receiverPayId: '',\n    amount: '',\n    sendMethod: 'address' // 'address' or 'payId'\n  });\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [lookupResult, setLookupResult] = useState(null);\n  useEffect(() => {\n    if (initialRecipientAddress) {\n      setFormData(prev => ({\n        ...prev,\n        receiverWalletAddress: initialRecipientAddress,\n        sendMethod: 'address'\n      }));\n    }\n  }, [initialRecipientAddress]);\n  const {\n    receiverWalletAddress,\n    receiverPayId,\n    amount,\n    sendMethod\n  } = formData;\n  const validateForm = () => {\n    if (sendMethod === 'address' && !receiverWalletAddress) {\n      setError('Recipient account ID is required');\n      return false;\n    }\n    if (sendMethod === 'payId' && (!receiverPayId || receiverPayId.length !== 4)) {\n      setError('Please enter a valid 4-digit PAY ID');\n      return false;\n    }\n    const parsedAmount = parseFloat(amount);\n    if (!parsedAmount || parsedAmount <= 0) {\n      setError('Please enter a valid amount greater than 0');\n      return false;\n    }\n    if (parsedAmount > wallet.balance) {\n      setError('Insufficient balance for this transaction');\n      return false;\n    }\n    return true;\n  };\n  const onChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    setError(''); // Clear error when user makes changes\n\n    // Clear lookup result when changing recipient info\n    if (name === 'receiverPayId' || name === 'receiverWalletAddress') {\n      setLookupResult(null);\n    }\n  };\n  const handleSendMethodChange = method => {\n    setFormData(prev => ({\n      ...prev,\n      sendMethod: method,\n      receiverWalletAddress: method === 'address' ? initialRecipientAddress : '',\n      receiverPayId: ''\n    }));\n    setLookupResult(null);\n    setError('');\n  };\n  const lookupPayId = async () => {\n    if (!receiverPayId || receiverPayId.length !== 4) {\n      setError('Please enter a valid 4-digit PAY ID');\n      return;\n    }\n    try {\n      setLoading(true);\n      setError('');\n      const res = await axios.get(`/api/users/find/${receiverPayId}`);\n\n      // Prevent sending to self\n      if (res.data.payId === wallet.payId) {\n        setError('Cannot send money to yourself');\n        setLookupResult(null);\n      } else {\n        setLookupResult(res.data);\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setLookupResult(null);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.msg) || 'Failed to find user with this PAY ID');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleOfflineTransaction = () => {\n    if (!validateForm()) return false;\n    const parsedAmount = parseFloat(amount);\n\n    // Additional offline mode validations\n    if (sendMethod === 'payId') {\n      setError('PAY ID transfers are not available in offline mode');\n      return false;\n    }\n    if (wallet.walletAddress === receiverWalletAddress) {\n      setError('Cannot send money to yourself');\n      return false;\n    }\n\n    // Create offline transaction\n    const offlineTransaction = {\n      id: `offline-${Date.now()}`,\n      senderWalletAddress: wallet.walletAddress,\n      receiverWalletAddress,\n      amount: parsedAmount,\n      date: new Date(),\n      isPending: true\n    };\n\n    // Update wallet balance locally\n    const updatedWallet = {\n      ...wallet,\n      balance: wallet.balance - parsedAmount\n    };\n\n    // Save to localStorage\n    try {\n      const transactions = getStoredTransactions();\n      storeTransactions([offlineTransaction, ...transactions]);\n      storeWallet(updatedWallet);\n      return updatedWallet;\n    } catch (err) {\n      setError('Failed to save offline transaction');\n      return false;\n    }\n  };\n  const onSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    setLoading(true);\n    if (!validateForm()) {\n      setLoading(false);\n      return;\n    }\n    try {\n      if (isOffline) {\n        const updatedWallet = handleOfflineTransaction();\n        if (updatedWallet) {\n          setSuccess('Transaction saved and will be processed when back online');\n\n          // Reset form\n          setFormData({\n            receiverWalletAddress: '',\n            receiverPayId: '',\n            amount: '',\n            sendMethod: 'address'\n          });\n          if (onSuccess) {\n            onSuccess(updatedWallet);\n          }\n        }\n      } else {\n        // Online mode\n        const transactionData = {\n          amount: parseFloat(amount)\n        };\n        if (sendMethod === 'address') {\n          transactionData.receiverWalletAddress = receiverWalletAddress;\n        } else {\n          transactionData.receiverPayId = receiverPayId;\n        }\n        const res = await axios.post('/api/transactions', transactionData);\n        setSuccess('Transaction completed successfully!');\n\n        // Reset form\n        setFormData({\n          receiverWalletAddress: '',\n          receiverPayId: '',\n          amount: '',\n          sendMethod: 'address'\n        });\n        if (onSuccess) {\n          onSuccess();\n        }\n      }\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.msg) || 'Transaction failed. Please check your input and try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"send-form card my-4 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-paper-plane\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), \" Send Money\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), isOffline && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-info-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), \" You are offline. Transactions will be saved locally and processed when you're back online.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"send-method-tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-btn ${sendMethod === 'address' ? 'active' : ''}`,\n        onClick: () => handleSendMethodChange('address'),\n        children: \"Send by Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-btn ${sendMethod === 'payId' ? 'active' : ''}`,\n        onClick: () => handleSendMethodChange('payId'),\n        disabled: isOffline,\n        children: \"Send by PAY ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [sendMethod === 'address' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"receiverWalletAddress\",\n          children: \"Recipient Account Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"receiverWalletAddress\",\n          id: \"receiverWalletAddress\",\n          value: receiverWalletAddress,\n          onChange: onChange,\n          required: sendMethod === 'address',\n          disabled: sendMethod !== 'address'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"receiverPayId\",\n          children: \"Recipient PAY ID (4 digits)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pay-id-lookup-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"receiverPayId\",\n            id: \"receiverPayId\",\n            value: receiverPayId,\n            onChange: onChange,\n            pattern: \"[0-9]{4}\",\n            maxLength: \"4\",\n            required: sendMethod === 'payId',\n            disabled: sendMethod !== 'payId' || isOffline\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-sm btn-info\",\n            onClick: lookupPayId,\n            disabled: loading || !receiverPayId || receiverPayId.length !== 4,\n            children: \"Lookup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this), lookupResult && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lookup-result\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Recipient found: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: lookupResult.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          children: \"Amount (PAY)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"amount\",\n          id: \"amount\",\n          value: amount,\n          onChange: onChange,\n          step: \"0.01\",\n          min: \"0.01\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          disabled: loading,\n          children: loading ? 'Processing...' : 'Send'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-light\",\n          onClick: onClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n};\n_s(SendMoneyForm, \"fIRuHJnAVQTJwFCppnoirte7bm8=\");\n_c = SendMoneyForm;\nexport default SendMoneyForm;\nvar _c;\n$RefreshReg$(_c, \"SendMoneyForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","getStoredWallet","storeWallet","getStoredTransactions","storeTransactions","jsxDEV","_jsxDEV","SendMoneyForm","onClose","onSuccess","initialRecipientAddress","wallet","isOffline","_s","formData","setFormData","receiverWalletAddress","receiverPayId","amount","sendMethod","error","setError","success","setSuccess","loading","setLoading","lookupResult","setLookupResult","prev","validateForm","length","parsedAmount","parseFloat","balance","onChange","e","name","value","target","handleSendMethodChange","method","lookupPayId","res","get","data","payId","err","_err$response","_err$response$data","response","msg","handleOfflineTransaction","walletAddress","offlineTransaction","id","Date","now","senderWalletAddress","date","isPending","updatedWallet","transactions","onSubmit","preventDefault","transactionData","post","_err$response2","_err$response2$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","htmlFor","type","required","pattern","maxLength","username","step","min","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/pay/client/src/components/wallet/SendMoneyForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { getStoredWallet, storeWallet, getStoredTransactions, storeTransactions } from '../../utils/localStorage';\r\n\r\nconst SendMoneyForm = ({ onClose, onSuccess, initialRecipientAddress = '', wallet, isOffline }) => {\r\n  const [formData, setFormData] = useState({\r\n    receiverWalletAddress: initialRecipientAddress,\r\n    receiverPayId: '',\r\n    amount: '',\r\n    sendMethod: 'address' // 'address' or 'payId'\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [lookupResult, setLookupResult] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (initialRecipientAddress) {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        receiverWalletAddress: initialRecipientAddress,\r\n        sendMethod: 'address'\r\n      }));\r\n    }\r\n  }, [initialRecipientAddress]);\r\n\r\n  const { receiverWalletAddress, receiverPayId, amount, sendMethod } = formData;\r\n\r\n  const validateForm = () => {\r\n    if (sendMethod === 'address' && !receiverWalletAddress) {\r\n      setError('Recipient account ID is required');\r\n      return false;\r\n    }\r\n    \r\n    if (sendMethod === 'payId' && (!receiverPayId || receiverPayId.length !== 4)) {\r\n      setError('Please enter a valid 4-digit PAY ID');\r\n      return false;\r\n    }\r\n    \r\n    const parsedAmount = parseFloat(amount);\r\n    if (!parsedAmount || parsedAmount <= 0) {\r\n      setError('Please enter a valid amount greater than 0');\r\n      return false;\r\n    }\r\n    \r\n    if (parsedAmount > wallet.balance) {\r\n      setError('Insufficient balance for this transaction');\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n    setError(''); // Clear error when user makes changes\r\n    \r\n    // Clear lookup result when changing recipient info\r\n    if (name === 'receiverPayId' || name === 'receiverWalletAddress') {\r\n      setLookupResult(null);\r\n    }\r\n  };\r\n\r\n  const handleSendMethodChange = (method) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      sendMethod: method,\r\n      receiverWalletAddress: method === 'address' ? initialRecipientAddress : '',\r\n      receiverPayId: ''\r\n    }));\r\n    setLookupResult(null);\r\n    setError('');\r\n  };\r\n\r\n  const lookupPayId = async () => {\r\n    if (!receiverPayId || receiverPayId.length !== 4) {\r\n      setError('Please enter a valid 4-digit PAY ID');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      setError('');\r\n      const res = await axios.get(`/api/users/find/${receiverPayId}`);\r\n      \r\n      // Prevent sending to self\r\n      if (res.data.payId === wallet.payId) {\r\n        setError('Cannot send money to yourself');\r\n        setLookupResult(null);\r\n      } else {\r\n        setLookupResult(res.data);\r\n      }\r\n    } catch (err) {\r\n      setLookupResult(null);\r\n      setError(err.response?.data?.msg || 'Failed to find user with this PAY ID');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleOfflineTransaction = () => {\r\n    if (!validateForm()) return false;\r\n    \r\n    const parsedAmount = parseFloat(amount);\r\n    \r\n    // Additional offline mode validations\r\n    if (sendMethod === 'payId') {\r\n      setError('PAY ID transfers are not available in offline mode');\r\n      return false;\r\n    }\r\n    \r\n    if (wallet.walletAddress === receiverWalletAddress) {\r\n      setError('Cannot send money to yourself');\r\n      return false;\r\n    }\r\n    \r\n    // Create offline transaction\r\n    const offlineTransaction = {\r\n      id: `offline-${Date.now()}`,\r\n      senderWalletAddress: wallet.walletAddress,\r\n      receiverWalletAddress,\r\n      amount: parsedAmount,\r\n      date: new Date(),\r\n      isPending: true\r\n    };\r\n    \r\n    // Update wallet balance locally\r\n    const updatedWallet = {\r\n      ...wallet,\r\n      balance: wallet.balance - parsedAmount\r\n    };\r\n    \r\n    // Save to localStorage\r\n    try {\r\n      const transactions = getStoredTransactions();\r\n      storeTransactions([offlineTransaction, ...transactions]);\r\n      storeWallet(updatedWallet);\r\n      return updatedWallet;\r\n    } catch (err) {\r\n      setError('Failed to save offline transaction');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess('');\r\n    setLoading(true);\r\n\r\n    if (!validateForm()) {\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (isOffline) {\r\n        const updatedWallet = handleOfflineTransaction();\r\n        if (updatedWallet) {\r\n          setSuccess('Transaction saved and will be processed when back online');\r\n          \r\n          // Reset form\r\n          setFormData({\r\n            receiverWalletAddress: '',\r\n            receiverPayId: '',\r\n            amount: '',\r\n            sendMethod: 'address'\r\n          });\r\n          \r\n          if (onSuccess) {\r\n            onSuccess(updatedWallet);\r\n          }\r\n        }\r\n      } else {\r\n        // Online mode\r\n        const transactionData = {\r\n          amount: parseFloat(amount)\r\n        };\r\n        \r\n        if (sendMethod === 'address') {\r\n          transactionData.receiverWalletAddress = receiverWalletAddress;\r\n        } else {\r\n          transactionData.receiverPayId = receiverPayId;\r\n        }\r\n        \r\n        const res = await axios.post('/api/transactions', transactionData);\r\n        \r\n        setSuccess('Transaction completed successfully!');\r\n        \r\n        // Reset form\r\n        setFormData({\r\n          receiverWalletAddress: '',\r\n          receiverPayId: '',\r\n          amount: '',\r\n          sendMethod: 'address'\r\n        });\r\n        \r\n        if (onSuccess) {\r\n          onSuccess();\r\n        }\r\n      }\r\n    } catch (err) {\r\n      setError(\r\n        err.response?.data?.msg || \r\n        'Transaction failed. Please check your input and try again.'\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"send-form card my-4 p-4\">\r\n      <h3>\r\n        <i className=\"fas fa-paper-plane\"></i> Send Money\r\n      </h3>\r\n      \r\n      {isOffline && (\r\n        <div className=\"alert alert-info\">\r\n          <i className=\"fas fa-info-circle\"></i> You are offline. Transactions will be saved locally and processed when you're back online.\r\n        </div>\r\n      )}\r\n      \r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n      {success && <div className=\"alert alert-success\">{success}</div>}\r\n      \r\n      <div className=\"send-method-tabs\">\r\n        <button \r\n          className={`tab-btn ${sendMethod === 'address' ? 'active' : ''}`}\r\n          onClick={() => handleSendMethodChange('address')}\r\n        >\r\n          Send by Address\r\n        </button>\r\n        <button \r\n          className={`tab-btn ${sendMethod === 'payId' ? 'active' : ''}`}\r\n          onClick={() => handleSendMethodChange('payId')}\r\n          disabled={isOffline}\r\n        >\r\n          Send by PAY ID\r\n        </button>\r\n      </div>\r\n      \r\n      <form onSubmit={onSubmit}>\r\n        {sendMethod === 'address' ? (\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"receiverWalletAddress\">Recipient Account Address</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"receiverWalletAddress\"\r\n              id=\"receiverWalletAddress\"\r\n              value={receiverWalletAddress}\r\n              onChange={onChange}\r\n              required={sendMethod === 'address'}\r\n              disabled={sendMethod !== 'address'}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"receiverPayId\">Recipient PAY ID (4 digits)</label>\r\n            <div className=\"pay-id-lookup-container\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"receiverPayId\"\r\n                id=\"receiverPayId\"\r\n                value={receiverPayId}\r\n                onChange={onChange}\r\n                pattern=\"[0-9]{4}\"\r\n                maxLength=\"4\"\r\n                required={sendMethod === 'payId'}\r\n                disabled={sendMethod !== 'payId' || isOffline}\r\n              />\r\n              <button \r\n                type=\"button\" \r\n                className=\"btn btn-sm btn-info\" \r\n                onClick={lookupPayId}\r\n                disabled={loading || !receiverPayId || receiverPayId.length !== 4}\r\n              >\r\n                Lookup\r\n              </button>\r\n            </div>\r\n            \r\n            {lookupResult && (\r\n              <div className=\"lookup-result\">\r\n                <p>Recipient found: <strong>{lookupResult.username}</strong></p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"amount\">Amount (PAY)</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"amount\"\r\n            id=\"amount\"\r\n            value={amount}\r\n            onChange={onChange}\r\n            step=\"0.01\"\r\n            min=\"0.01\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"btn-group\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary\"\r\n            disabled={loading}\r\n          >\r\n            {loading ? 'Processing...' : 'Send'}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n            onClick={onClose}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SendMoneyForm; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}